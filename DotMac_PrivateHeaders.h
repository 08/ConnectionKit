/*
 *     Generated by class-dump 3.1.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2005 by Steve Nygard.
 */

struct _NSRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct _NSZone;

struct __CFHTTPMessage;

struct __CFReadStream;

struct __CFRunLoopSource;

struct __CFURL;

struct __DMNSession;

struct in6_addr {
    union {
        unsigned char __u6_addr8[16];
        unsigned short __u6_addr16[8];
        unsigned int __u6_addr32[4];
    } __u6_addr;
};

struct in_addr {
    unsigned int s_addr;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char sin_len;
    unsigned char sin_family;
    unsigned short sin_port;
    struct in_addr sin_addr;
    char sin_zero[8];
};

struct sockaddr_in6 {
    unsigned char sin6_len;
    unsigned char sin6_family;
    unsigned short sin6_port;
    unsigned int sin6_flowinfo;
    struct in6_addr sin6_addr;
    unsigned int sin6_scope_id;
};

typedef struct {
    int _field1;
    int _field2;
} CDAnonymousStruct1;

/*
 * File: DotMacKit
 * Arch: PowerPC (ppc)
 *       Current version: 1.0.0, Compatibility version: 1.0.0
 */

@protocol AYGroup <NSObject>
- (BOOL)operationShouldBeLaunchedNow:(id)fp8;
- (void)operationHasEnded:(id)fp8;
@end

@protocol AYNotificationDelegate
- (void)operation:(id)fp8 notify:(id)fp12;
@end

@protocol DAVAuthStore
- (BOOL)hasCredentialsForSession:(id)fp8;
- (BOOL)session:(id)fp8 addAuthHeaderToMessage:(struct __CFHTTPMessage *)fp12;
- (void)session:(id)fp8 storeAuthChallenge:(id)fp12 forURL:(id)fp16;
- (void)clearAuthChallengeForSession:(id)fp8;
@end

@protocol DAVResponseBodyReader
- (BOOL)request:(id)fp8 acceptResponseWithHTTPStatusCode:(int)fp12;
- (void)request:(id)fp8 readResponseBody:(id)fp12;
@end

@protocol DMCredential
- (id)name;
- (id)password;
- (id)owner;
@end

@protocol DMMessageStore
- (id)credentials;
- (int)addTopic:(id)fp8 handler:(id)fp12;
- (int)removeTopic:(id)fp8 handler:(id)fp12;
- (id)topicsWithHandler:(id)fp8;
- (int)topicExists:(id)fp8 handler:(id)fp12;
- (int)addMessage:(id)fp8 toTopic:(id)fp12 handler:(id)fp16;
- (id)managedPropsForMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)newMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)messagesInTopic:(id)fp8 handler:(id)fp12;
- (id)messageWithID:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (id)newestMessageInTopic:(id)fp8 handler:(id)fp12;
- (id)oldestMessageInTopic:(id)fp8 handler:(id)fp12;
- (int)removeMessageWithID:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (int)removeMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)resetTimeToLive:(double)fp8 forMessageWithID:(id)fp16 inTopic:(id)fp20 handler:(id)fp24;
- (int)resetTimeToLiveForMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)payloadForMessage:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (int)setAccess:(id)fp8 toTopic:(id)fp12 forPrincipals:(id)fp16 handler:(id)fp20;
- (id)accessToTopic:(id)fp8 forPrincipals:(id)fp12 handler:(id)fp16;
@end

@protocol DMPrincipal
+ (id)principalIDWithName:(id)fp8 andOwner:(id)fp12;
- (id)principalID;
@end

@protocol DMPrincipalManagement
- (id)initWithIDiskSession:(id)fp8;
- (id)createSecondaryUserNamed:(id)fp8 withPassword:(id)fp12;
- (id)removeSecondaryUserNamed:(id)fp8;
- (id)resetPassword:(id)fp8 forSecondaryUserNamed:(id)fp12;
- (id)listSecondaryUsersForAccountNamed:(id)fp8;
- (id)createGroup:(id)fp8 withMembers:(id)fp12;
- (id)addPrincipals:(id)fp8 toGroup:(id)fp12;
- (id)removePrincipals:(id)fp8 fromGroup:(id)fp12;
- (id)removeGroup:(id)fp8;
- (id)listMembers:(id)fp8;
- (id)groupExists:(id)fp8;
- (id)listGroupsForAccountNamed:(id)fp8;
@end

@protocol DMSecurity
- (id)accessToEntity:(id)fp8 forPrincipal:(id)fp12;
- (id)accessToEntity:(id)fp8 forPrincipals:(id)fp12;
- (id)setAccess:(id)fp8 toEntity:(id)fp12 forPrincipals:(id)fp16;
- (id)resetAccessToChildrenOfEntity:(id)fp8;
@end

@protocol DMTransactionGenerator
- (void)setTransactionDelegate:(id)fp8;
- (id)transactionDelegate;
- (void)setIsSynchronous:(BOOL)fp8;
- (BOOL)isSynchronous;
@end

@protocol NSCoding
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)fp8;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)fp8;
@end

@protocol NSObject
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)fp8;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12 withObject:(id)fp16;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)fp8;
- (BOOL)isMemberOfClass:(Class)fp8;
- (BOOL)conformsToProtocol:(id)fp8;
- (BOOL)respondsToSelector:(SEL)fp8;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned int)retainCount;
- (id)description;
@end

@interface DMMessageSubscriber : NSObject <DMTransactionGenerator, DMSecurity>
{
    DMMemberAccount *_credentials;
    BOOL _use_synchronous;
    id _transaction_delegate;
    id _subscription_delegate;
    id _listener;
    NSLock *_listener_lock;
    id _message_cache;
    NSConditionLock *_topicUpdateLock;
    NSMutableDictionary *_topicsInQueue;
    NSMutableArray *_topicQueue;
    int _numTopicsInQueue;
    NSLock *_activityCheckerLock;
    int _numUpdatesInProgress;
    BOOL _subscriberHalted;
    NSLock *_observerLock;
    NSMutableDictionary *_registeredProcessObservers;
    NSMutableDictionary *_registeredSystemObservers;
    NSMutableDictionary *_registeredRemoteObservers;
    NSString *_subscriberInstanceStr;
    NSString *_subscriberID;
    NSData *_subscriberIDData;
    DMTopic *_invitationsTopic;
    NSLock *_invitationsLock;
    BOOL _isMasterSubscriber;
}

+ (void)initialize;
+ (id)messageSubscriberWithCredentials:(id)fp8;
- (id)initMessageSubscriberWithCredentials:(id)fp8;
- (id)_initMessageSubscriberWithCredentials:(id)fp8 forAllAppIDs:(BOOL)fp12;
- (BOOL)_isMasterSubscriber;
- (id)_messageCache;
- (id)credentials;
- (id)_invitationsTopic;
- (id)topicNamed:(id)fp8;
- (id)topicNamed:(id)fp8 andOwnedBy:(id)fp12;
- (id)topicNamed:(id)fp8 andOwnedBy:(id)fp12 withApplicationID:(id)fp16;
- (id)_registerObservers;
- (id)subscribeToTopic:(id)fp8;
- (id)unsubscribeFromTopic:(id)fp8;
- (id)subscribedTopics;
- (void)setSubscriptionDelegate:(id)fp8;
- (id)subscriptionDelegate;
- (void)addLaunchableAppForTopics:(id)fp8 withBundleIdentifier:(id)fp12 arguments:(id)fp16 options:(int)fp20;
- (void)addLaunchableToolForTopics:(id)fp8 withPath:(id)fp12 arguments:(id)fp16 options:(int)fp20;
- (void)removeLaunchableAppForTopics:(id)fp8 withBundleIdentifier:(id)fp12;
- (void)removeLaunchableToolForTopics:(id)fp8 withPath:(id)fp12;
- (void)removeLaunchablesForTopics:(id)fp8;
- (id)invitationsForTopics;
- (id)_activityCheckerLock;
- (BOOL)_shutDown;
- (void)dealloc;
- (id)_observerLock;
- (id)_registeredProcessObservers;
- (id)_registeredSystemObservers;
- (id)_registeredRemoteObservers;
- (void)_unregisterObservers;
- (void)_attachListener;
- (void)_detachListener;
- (id)_listener;
- (id)_listenerLock;
- (void)handlePortMessage:(id)fp8;
- (BOOL)_sendChangeMessageWithType:(unsigned int)fp8 andPayload:(id)fp12;
- (int)_handleChangeForTopic:(id)fp8;
- (int)_handleInvitedTopics;
- (id)_serializeTopics:(id)fp8;
- (id)_deserializeTopics:(id)fp8;
- (id)_topicForID:(id)fp8;
- (void)setTransactionDelegate:(id)fp8;
- (id)transactionDelegate;
- (void)setIsSynchronous:(BOOL)fp8;
- (BOOL)isSynchronous;
- (id)accessToEntity:(id)fp8 forPrincipal:(id)fp12;
- (id)accessToEntity:(id)fp8 forPrincipals:(id)fp12;
- (id)setAccess:(id)fp8 toEntity:(id)fp12 forPrincipals:(id)fp16;
- (id)resetAccessToChildrenOfEntity:(id)fp8;
- (int)_scheduleUpdateForTopic:(id)fp8;
- (void)_launchTopicUpdaterThreadsWithCount:(unsigned int)fp8;
- (void)_runTopicUpdater:(id)fp8;
- (id)_topicUpdateLock;
- (id)_topicsInQueue;
- (id)_topicQueue;
- (unsigned int)_subscriberPid;
- (void)_processLocalTopicNotification:(id)fp8;
- (void)_processRemoteNotificationWithChangeDict:(id)fp8;
- (void)_notifyProcessForTopic:(id)fp8;
- (void)_notifySystemForTopic:(id)fp8;
- (void)_updateTopic:(id)fp8;

@end

@interface DMAccount : NSObject <DMCredential, DMPrincipal>
{
    id _identity;
    NSString *_principalID;
}

+ (id)principalIDWithName:(id)fp8 andOwner:(id)fp12;
- (id)initWithName:(id)fp8 password:(id)fp12 applicationID:(id)fp16;
- (id)principalID;
- (id)init;
- (id)name;
- (id)password;
- (id)owner;
- (id)applicationID;
- (id)applicationName;
- (void)setApplicationName:(id)fp8;
- (void)setApplicationID:(id)fp8;
- (void)_setApplicationID:(id)fp8;
- (void)_setName:(id)fp8;
- (void)_setPassword:(id)fp8;
- (void)setManagedName:(id)fp8;
- (id)managedName;
- (id)_userAgent;
- (void)_setDiskHost:(id)fp8 port:(int)fp12 scheme:(id)fp16;
- (id)_diskURL;
- (void)dealloc;

@end

@interface DMRemoveObserversRequest : DotMacKitAYOperation
{
    DMTopic *_topic;
    struct __DMNSession *_notifySession;
    DMMessageSubscriber *_subscriber;
}

- (id)initWithTopic:(id)fp8 andSubscriber:(id)fp12;
- (void)dispatch;
- (void)dealloc;

@end

@interface DMRegisterObserversRequest : DotMacKitAYOperation
{
    DMTopic *_topic;
    struct __DMNSession *_notifySession;
    DMMessageSubscriber *_subscriber;
    DotMacKitAYError *_theError;
}

- (id)initWithTopic:(id)fp8 andSubscriber:(id)fp12;
- (void)dispatch;
- (BOOL)_registerObserverForTopic:(id)fp8 withObserverID:(id)fp12;
- (void)dealloc;

@end

@interface DMTransaction : NSObject
{
    id _request;
    id _parent_request;
    id _delegate;
    id _result;
    BOOL _started;
    BOOL _finished;
    BOOL _aborted;
    BOOL _use_synchronous;
    BOOL _is_upload;
    BOOL _force;
    BOOL _tracking;
    BOOL _data;
    BOOL _result_required;
    id _pre_handler_obj;
    SEL _pre_handler_sel;
    id _post_handler_obj;
    SEL _post_handler_sel;
    id _response_handler;
    id _listener;
    NSString *_identifier;
    id _context;
    id _notes;
    id _my_private_ivars;
}

+ (id)_transactionWithRequest:(id)fp8 synchronousFlag:(BOOL)fp12 delegate:(id)fp16;
+ (void)initialize;
- (void)abort;
- (id)result;
- (id)resultData;
- (int)transactionState;
- (BOOL)isSuccessful;
- (BOOL)_receivedSuccessResponse;
- (BOOL)_statusCodeSuccessful;
- (int)httpStatusCode;
- (int)errorType;
- (long long)contentLength;
- (long long)bytesTransferred;
- (id)transactionID;
- (void)setContext:(id)fp8;
- (id)context;
- (id)uri;
- (id)method;
- (id)_initTransactionWithRequest:(id)fp8 synchronousFlag:(BOOL)fp12 delegate:(id)fp16;
- (id)init;
- (void)_dispatch;
- (void)_setResult:(id)fp8;
- (void)_setRequest:(id)fp8;
- (id)_request;
- (id)_delegate;
- (void)_attachListener;
- (void)_detachListener;
- (void)handlePortMessage:(id)fp8;
- (id)_listener;
- (BOOL)_isSynchronous;
- (void)_setPreHandler:(SEL)fp8 andTargetObject:(id)fp12;
- (id)_performPreHandler;
- (void)_setPostHandler:(SEL)fp8 andTargetObject:(id)fp12;
- (id)_performPostHandler;
- (BOOL)_transactionStarted;
- (void)_setTransactionStarted:(BOOL)fp8;
- (BOOL)isFinished;
- (BOOL)_transactionFinished;
- (void)_setTransactionFinished:(BOOL)fp8;
- (BOOL)_transactionAborted;
- (void)_setTransactionAborted:(BOOL)fp8;
- (void)_setForceSuccess:(BOOL)fp8;
- (BOOL)_forceSuccess;
- (id)_headerWithName:(id)fp8;
- (id)_serverSideDate;
- (id)_lastModifiedDate;
- (id)_creationDate;
- (id)identifier;
- (void)_addTracking;
- (BOOL)_isBeingTracked;
- (void)_setRawDataAccess:(BOOL)fp8;
- (void)_setResultRequired:(BOOL)fp8;
- (void)_setNotes:(id)fp8;
- (id)_notes;
- (void)_setParentRequest:(id)fp8;
- (id)_parentRequest;
- (void)_logFailure;
- (void)dealloc;

@end

@interface MiddlemanDelegate : NSObject <AYNotificationDelegate>
{
    DMTransaction *_my_transaction;
    NSPortMessage *_finishedMsg;
    NSLock *_preHandlerLock;
    BOOL _performedPreHandler;
}

- (id)init;
- (void)operation:(id)fp8 notify:(id)fp12;
- (void)_setTransaction:(id)fp8;
- (id)_transaction;
- (void)dealloc;

@end

@interface DotMacKitAYAddress : NSObject <NSCopying>
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)fp8;
+ (id)_createAddressFromSockaddrBuffer:(struct sockaddr *)fp8;
+ (id)addressWithData:(id)fp8;
+ (id)addressWithString:(id)fp8;
+ (id)addressOfPeerFromSocket:(int)fp8;
+ (id)addressOfLocalFromSocket:(int)fp8;
+ (id)addressesFromDataAddresses:(id)fp8;
+ (id)IPV4AddressesFromDataAddresses:(id)fp8;
- (id)initAddressWithData:(id)fp8;
- (id)initAddressWithString:(id)fp8;
- (id)initAddressWithPeerFromSocket:(int)fp8;
- (id)initAddressWithLocalFromSocket:(int)fp8;
- (id)type;
- (id)addressAsString;
- (int)port;
- (id)addressAsData;
- (void)getAddressAsSockAddr:(struct sockaddr *)fp8 length:(int *)fp12;
- (id)description;
- (id)URLToAddressWithScheme:(id)fp8;
- (id)URLToAddressWithScheme:(id)fp8 andPort:(int)fp12;
- (id)URLToAddressWithScheme:(id)fp8 andPort:(int)fp12 URI:(id)fp16;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dumpInternal;

@end

@interface DotMacKitAYIPV6Address : DotMacKitAYAddress
{
    struct sockaddr_in6 _saddr;
}

- (id)initWithSockaddrBuffer:(struct sockaddr *)fp8;
- (id)type;
- (id)addressAsString;
- (int)port;
- (id)addressAsData;
- (void)getAddressAsSockAddr:(struct sockaddr *)fp8 length:(int *)fp12;
- (id)URLToAddressWithScheme:(id)fp8 andPort:(int)fp12 URI:(id)fp16;
- (void)dumpInternal;

@end

@interface DotMacKitAYIPV4Address : DotMacKitAYAddress
{
    struct sockaddr_in _saddr;
}

- (id)initWithSockaddrBuffer:(struct sockaddr *)fp8;
- (id)type;
- (id)addressAsString;
- (int)port;
- (unsigned int)_s_addr;
- (id)addressAsData;
- (void)getAddressAsSockAddr:(struct sockaddr *)fp8 length:(int *)fp12;
- (id)URLToAddressWithScheme:(id)fp8 andPort:(int)fp12 URI:(id)fp16;
- (void)dumpInternal;

@end

@interface DotMacKitDAVRequest : DotMacKitAYOperation
{
    struct __CFHTTPMessage *_requestMessage;
    struct __CFHTTPMessage *_responseMessage;
    struct __CFReadStream *_readStream;
    struct __CFReadStream *_bodyStream;
    struct {
        int version;
        void *info;
        void *retain;
        void *release;
        void *copyDescription;
    } _clientContext;
    DotMacKitDAVSession *_session;
    NSString *_method;
    NSString *_uri;
    NSMutableSet *_bodyReaders;
    NSMutableSet *_acceptingReaders;
    NSMutableDictionary *_requestHeaders;
    NSDictionary *_headers;
    NSString *_httpStatus;
    unsigned int _httpStatusCode;
    NSMutableDictionary *_attemptDictionary;
    NSData *_requestBodyData;
    long long _contentLength;
    long long _readLength;
    long long _requestLength;
    long long _putLength;
    id _delegate;
    void *_davReserved;
    NSString *_contentType;
}

+ (void)initialize;
+ (id)requestWithURL:(id)fp8 method:(id)fp12;
+ (id)requestWithSession:(id)fp8 method:(id)fp12 path:(id)fp16;
+ (id)requestWithSession:(id)fp8 method:(id)fp12 URI:(id)fp16;
- (id)initWithURL:(id)fp8 method:(id)fp12;
- (id)initWithSession:(id)fp8 method:(id)fp12 path:(id)fp16;
- (id)initWithSession:(id)fp8 method:(id)fp12 URI:(id)fp16;
- (void)dealloc;
- (id)description;
- (id)contentType;
- (void)setContentType:(id)fp8;
- (id)session;
- (id)method;
- (id)uri;
- (id)url;
- (void)setRequestBodyWithData:(id)fp8;
- (id)requestBodyData;
- (void)setRequestBodyWithString:(id)fp8 encoding:(unsigned int)fp12;
- (void)setHeader:(id)fp8 withValue:(id)fp12;
- (id)requestHeaders;
- (void)addResponseBodyReader:(id)fp8;
- (void)grantRequestWithLockToken:(id)fp8;
- (void)grantRequestWithLockTokens:(id)fp8;
- (void)initBeforeDispatch;
- (void)dispatch;
- (int)httpStatusCode;
- (id)responseHeaders;
- (long long)responseContentLength;
- (long long)readLength;
- (long long)operationProgress;
- (long long)operationTotal;
- (long long)requestLength;
- (long long)putLength;
- (id)httpStatus;
- (id)acceptingReaders;

@end

@interface DotMacKitDAVRequest (Private)
- (unsigned char)_bodyStreamOpen:(CDAnonymousStruct1 *)fp8 openComplete:(char *)fp12;
- (long)_bodyStreamRead:(char *)fp8 bufferLength:(long)fp12 error:(CDAnonymousStruct1 *)fp16 atEOF:(char *)fp20;
- (unsigned char)_bodyStreamCanRead;
- (BOOL)_computeHeaders;
- (void)_readStreamEvent:(int)fp8;
- (BOOL)_initHTTPRequest;
- (void)endOperationWithError:(id)fp8;
- (BOOL)isRunLoopBased;
@end

@interface DotMacKitDAVRequest (Internal)
- (struct __CFHTTPMessage *)lastResponseMessage;
- (struct __CFHTTPMessage *)lastRequestMessage;
- (int)attemptForHTTPCode:(int)fp8;
- (struct __CFReadStream *)newStreamWithRequestMessage:(struct __CFHTTPMessage *)fp8;
@end

@interface DotMacKitDAVRequest (DotMacKitDAVSession)
- (void)setUsername:(id)fp8 andPassword:(id)fp12;
- (id)username;
- (id)password;
@end

@interface DotMacKitDAVXMLNode : NSObject
{
    NSMutableArray *_children;
    NSDictionary *_attributes;
    NSString *_content;
    NSString *_name;
}

- (id)initWithName:(id)fp8 attributes:(id)fp12;
- (void)dealloc;
- (void)addChild:(id)fp8;
- (void)setContent:(id)fp8;
- (id)name;
- (id)content;
- (id)textContent;
- (id)attributes;
- (id)childrenEnumerator;
- (unsigned int)childrenCount;
- (id)description;
- (id)DotMacKitxmlStringWithBag:(id)fp8;
- (id)dataUsingEncoding:(unsigned int)fp8;
- (id)simpleTraverseWithPath:(id)fp8;
- (id)simpleTraverseWithPathArray:(id)fp8 pos:(unsigned int)fp12;

@end

@interface DotMacKitDAVXMLNode (DAVConvenientAdditions)
+ (id)collectionNode;
@end

@interface NSObject (DotMacKitDAVXMLNode)
- (id)DotMacKitxmlStringWithBag:(id)fp8;
@end

@interface DMMessage : NSObject <NSMutableCopying, DMTransactionGenerator>
{
    NSString *_msg_string;
    NSDictionary *_properties;
    id _payload;
    NSString *_payload_type;
    NSString *_msg_id;
    DMTopic *_topic;
    NSString *_publisher;
    NSDate *_publication_date;
    NSDate *_expiration_date;
    double _ttl;
    unsigned int _payload_size;
    BOOL _use_synchronous;
    id _transaction_delegate;
    BOOL _is_published;
    BOOL _isTTLAlreadySet;
    id _enc_properties;
    id _enc_payload;
}

+ (id)message:(id)fp8;
+ (id)message:(id)fp8 withProperties:(id)fp12 andPayload:(id)fp16 ofType:(id)fp20;
- (id)initMessage:(id)fp8;
- (id)initMessage:(id)fp8 withProperties:(id)fp12 andPayload:(id)fp16 ofType:(id)fp20;
- (id)mutableCopyWithZone:(struct _NSZone *)fp8;
- (id)messageID;
- (void)_setMessageID:(id)fp8;
- (id)publisher;
- (void)_setPublisher:(id)fp8;
- (id)topic;
- (void)_setTopic:(id)fp8;
- (id)messageString;
- (int)setMessageString:(id)fp8;
- (id)payload;
- (void)_setPayloadSize:(unsigned int)fp8;
- (unsigned int)payloadSize;
- (void)_setEncodedPayload:(id)fp8;
- (id)_encodedPayload;
- (void)_setEncodedProperties:(id)fp8;
- (id)_encodedProperties;
- (id)payloadType;
- (int)setPayload:(id)fp8 ofType:(id)fp12;
- (id)properties;
- (int)setProperties:(id)fp8;
- (id)publicationDate;
- (void)_setPublicationDate:(id)fp8;
- (id)expirationDate;
- (void)_setExpirationDate:(id)fp8;
- (double)timeToLive;
- (int)setTimeToLive:(double)fp8;
- (BOOL)_isTTLAlreadySet;
- (BOOL)isPublished;
- (void)_setIsPublished:(BOOL)fp8;
- (void)setTransactionDelegate:(id)fp8;
- (id)transactionDelegate;
- (void)setIsSynchronous:(BOOL)fp8;
- (BOOL)isSynchronous;
- (void)dealloc;

@end

@interface DMPayloadDownloadRequest : DotMacKitAYOperation
{
    DMMessage *_message;
    DMTopic *_topic;
    DMMessageCache *_messageCache;
    NSNumber *_payloadSize;
}

- (id)initWithPayloadSize:(unsigned int)fp8 message:(id)fp12 andTopic:(id)fp16;
- (void)dispatch;
- (void)dealloc;

@end

@interface DotMacKitDAVMultiStatusBodyReader : NSObject <DAVResponseBodyReader>
{
    Class responseClass;
    NSMutableData *readData;
    NSArray *responses;
}

+ (id)multiStatusBodyReader;
+ (id)multiStatusBodyReaderWithResponseClass:(Class)fp8;
+ (id)propFindBodyReader;
- (id)init;
- (id)initWithResponseClass:(Class)fp8;
- (id)initForPropFind;
- (void)dealloc;
- (id)responses;
- (BOOL)request:(id)fp8 acceptResponseWithHTTPStatusCode:(int)fp12;
- (void)_calculateResponses;
- (void)request:(id)fp8 readResponseBody:(id)fp12;

@end

@interface DotMacKitDAVPropFindResponse : DotMacKitDAVMultiStatusResponse
{
    NSMutableDictionary *categorizedProperties;
}

- (id)init;
- (void)dealloc;
- (id)propertiesWithStatusCode:(int)fp8;
- (id)properties;
- (id)propertyForKey:(id)fp8;
- (int)statusCodeForKey:(id)fp8;
- (BOOL)handleResponseSubnode:(id)fp8;

@end

@interface DotMacKitDAVMultiStatusResponse : NSObject
{
    NSURL *href;
    NSString *responseDescription;
    int statusCode;
}

- (id)init;
- (id)initWithXMLNode:(id)fp8;
- (void)dealloc;
- (id)href;
- (int)statusCode;
- (id)responseDescription;
- (BOOL)handleResponseSubnode:(id)fp8;

@end

@interface DotMacKitDAVPropFindResponse (WebDAVProperties)
- (id)_getPropertyForKey:(id)fp8;
- (long long)getContentLength;
- (id)creationDate;
- (id)getDisplayName;
- (BOOL)isCollection;
- (BOOL)isFolder;
- (id)ressourceType;
@end

@interface DotMacKitDAVSession : NSObject <AYGroup>
{
    NSString *_scheme;
    NSString *_host;
    DotMacKitAYAddress *_address;
    int _port;
    BOOL _bypassProxies;
    BOOL _builtinRedirect;
    NSString *_basicAuthStr;
    NSString *_userAgent;
    NSString *_username;
    NSString *_password;
    unsigned int _readTimeOut;
    id _delegate;
    NSMutableDictionary *_privateInfos;
    NSMutableSet *_adapters;
    int _bufferSize;
    NSLock *_sessionLock;
    int _numWorkerThread;
    id _authStore;
    id _simpleAuthStore;
    void *_davReserved;
    NSString *_contentType;
    NSString *_trustHeaderValue;
    BOOL _useBasicAuth;
}

+ (void)initialize;
+ (id)sessionWithScheme:(id)fp8 host:(id)fp12 port:(int)fp16;
+ (id)sessionWithURL:(id)fp8;
+ (void)setMaxRedirection:(int)fp8;
+ (void)setMaxWorkerThreadsPerSession:(int)fp8;
+ (void)setProxiesDelegate:(id)fp8;
- (id)initWithScheme:(id)fp8 host:(id)fp12 port:(int)fp16;
- (id)initWithURL:(id)fp8;
- (void)dealloc;
- (id)description;
- (void)_setTrustHeaderValue:(id)fp8;
- (id)_trustHeaderValue;
- (void)_setContentType:(id)fp8;
- (id)_contentType;
- (void)_setUseBasicAuth:(BOOL)fp8;
- (BOOL)_useBasicAuth;
- (id)scheme;
- (id)host;
- (int)port;
- (id)URLToURI:(id)fp8;
- (void)setBuiltinRedirect:(BOOL)fp8;
- (BOOL)isBuiltinRedirect;
- (void)setAuthStore:(id)fp8;
- (void)clearAuthChallenge;
- (void)addAdapter:(id)fp8;
- (void)setInfo:(id)fp8 forKey:(id)fp12;
- (id)infoForKey:(id)fp8;
- (void)setDelegate:(id)fp8;
- (void)setUsername:(id)fp8 andPassword:(id)fp12;
- (id)username;
- (id)password;
- (BOOL)hasCredentials;
- (void)setLockOwner:(id)fp8;
- (id)lockOwner;
- (void)setReadTimeOut:(unsigned int)fp8;
- (unsigned int)readTimeOut;
- (void)setUserAgent:(id)fp8;
- (id)userAgent;
- (void)setBypassProxies:(BOOL)fp8;
- (BOOL)isBypassProxies;
- (int)workerThreadsCount;
- (BOOL)operationShouldBeLaunchedNow:(id)fp8;
- (void)operationHasEnded:(id)fp8;

@end

@interface DotMacKit_DAVNaiveAuthStore : NSObject <DAVAuthStore>
{
    NSString *baseHost;
    NSString *baseScheme;
    int basePort;
    DotMacKitDAVChallenge *authChallenge;
}

- (id)init;
- (void)dealloc;
- (BOOL)hasCredentialsForSession:(id)fp8;
- (BOOL)session:(id)fp8 addAuthHeaderToMessage:(struct __CFHTTPMessage *)fp12;
- (void)session:(id)fp8 storeAuthChallenge:(id)fp12 forURL:(id)fp16;
- (void)clearAuthChallengeForSession:(id)fp8;

@end

@interface DotMacKit_DAVBasicChallenge : DotMacKitDAVChallenge
{
    NSString *authString;
}

- (id)initWithAuthString:(id)fp8;
- (void)dealloc;
- (void)addAuthHeaderToMessage:(struct __CFHTTPMessage *)fp8;

@end

@interface DotMacKit_DAVTotalChallenge : DotMacKitDAVChallenge
{
    struct __CFHTTPMessage *badAuthResponse;
    NSString *username;
    NSString *password;
}

- (id)initWithBadAuthResponse:(struct __CFHTTPMessage *)fp8 username:(id)fp12 password:(id)fp16;
- (void)dealloc;
- (void)addAuthHeaderToMessage:(struct __CFHTTPMessage *)fp8;

@end

@interface DotMacKitDAVChallenge : NSObject
{
}

- (void)addAuthHeaderToMessage:(struct __CFHTTPMessage *)fp8;

@end

@interface DotMacKit_DAVRunLoopAdder : NSObject
{
    struct __CFRunLoopSource *_source;
}

- (id)initWithRunLoopSource:(struct __CFRunLoopSource *)fp8;
- (void)addRunLoopSource;

@end

@interface DotMacKitDAVSession (Internal)
- (void)notifyAdaptersRequestCreated:(id)fp8;
- (void)notifyAdaptersRequestDestroyed:(id)fp8;
- (id)getNewRequestMessage:(struct __CFHTTPMessage **)fp8 andStream:(struct __CFReadStream **)fp12 forRequest:(id)fp16;
- (long)bufferSize;
- (void)correctBufferSizeWithSize:(long)fp8;
@end

@interface DMDAVACL : DotMacKitDAVRequest
{
    NSString *_path;
    NSArray *_principals;
    NSArray *_accessRights;
}

+ (id)accessRightsRequest:(id)fp8 withSession:(id)fp12 toPath:(id)fp16 forPrincipals:(id)fp20;
- (id)_newACLBodyForDictionary:(id)fp8;
- (id)_acesForAccess:(id)fp8 forPrincipal:(id)fp12;
- (id)init:(id)fp8 withSession:(id)fp12 toPath:(id)fp16 forPrincipals:(id)fp20;
- (void)dispatch;
- (void)dealloc;

@end

@interface DMDAVGetProps : DotMacKitDAVRequest
{
}

+ (id)getPropsRequestWithSession:(id)fp8 URI:(id)fp12 properties:(id)fp16;
- (id)initGetPropsWithSession:(id)fp8 URI:(id)fp12 properties:(id)fp16;
- (id)infos;
- (void)finalizeOperation;

@end

@interface DMDAVUnlock : DotMacKitDAVUnlock
{
}

+ (id)unlockRequestWithSession:(id)fp8 URI:(id)fp12 lockToken:(id)fp16;
- (id)initUnlockWithSession:(id)fp8 URI:(id)fp12 lockToken:(id)fp16;
- (void)finalizeOperation;

@end

@interface DMDAVLock : DotMacKitDAVLock
{
    double _lockDuration;
}

+ (id)lockRequestWithSession:(id)fp8 URI:(id)fp12 duration:(double)fp16;
+ (id)relockRequestWithSession:(id)fp8 URI:(id)fp12 lockToken:(id)fp16 duration:(double)fp20;
- (id)initLockWithSession:(id)fp8 URI:(id)fp12 duration:(double)fp16;
- (id)initRelockWithSession:(id)fp8 URI:(id)fp12 lockToken:(id)fp16 duration:(double)fp20;
- (double)lockDuration;

@end

@interface DMDAVListMembers : DotMacKitDAVListMembers
{
}

+ (id)listMembersRequestWithSession:(id)fp8 URI:(id)fp12 showHidden:(BOOL)fp16;
- (id)initListMembersWithSession:(id)fp8 URI:(id)fp12 showHidden:(BOOL)fp16;
- (void)finalizeOperation;

@end

@interface DMDAVPropFind : DMDAVPropertiesRequest
{
    BOOL _includeParent;
    BOOL _returnDictionary;
}

+ (id)propFindWithSession:(id)fp8 withDepth:(id)fp12 URI:(id)fp16 lookingForProps:(id)fp20 includingParent:(BOOL)fp24;
- (id)initPropFindWithSession:(id)fp8 withDepth:(id)fp12 URI:(id)fp16 lookingForProps:(id)fp20 includingParent:(BOOL)fp24;
- (void)setResultsReturnedInDictionary:(BOOL)fp8;
- (void)finalizeOperation;

@end

@interface DMDAVPropPatch : DMDAVPropertiesRequest
{
}

+ (id)propPatchWithSession:(id)fp8 URI:(id)fp12 updatingProps:(id)fp16 token:(id)fp20 inNameSpace:(id)fp24;
- (id)initPropPatchWithSession:(id)fp8 URI:(id)fp12 updatingProps:(id)fp16 token:(id)fp20 inNameSpace:(id)fp24;
- (void)finalizeOperation;

@end

@interface DMDAVDelete : DotMacKitDAVDelete
{
}

+ (id)deleteRequestWithSession:(id)fp8 URI:(id)fp12 token:(id)fp16;
- (id)initDeleteWithSession:(id)fp8 URI:(id)fp12 token:(id)fp16;
- (void)finalizeOperation;

@end

@interface DMDAVMkcol : DotMacKitDAVMakeCollection
{
}

+ (id)mkcolRequestWithSession:(id)fp8 URI:(id)fp12 token:(id)fp16;
- (id)initMkcolWithSession:(id)fp8 URI:(id)fp12 token:(id)fp16;
- (void)finalizeOperation;

@end

@interface DMDAVMove : DotMacKitDAVRequest
{
}

+ (id)moveRequestWithSession:(id)fp8 sourceURI:(id)fp12 destinationURI:(id)fp16 sourceToken:(id)fp20 destinationToken:(id)fp24;
- (id)initMoveWithSession:(id)fp8 sourceURI:(id)fp12 destinationURI:(id)fp16 sourceToken:(id)fp20 destinationToken:(id)fp24;
- (void)finalizeOperation;

@end

@interface DMDAVCopy : DotMacKitDAVRequest
{
}

+ (id)copyRequestWithSession:(id)fp8 sourceURI:(id)fp12 destinationURI:(id)fp16 token:(id)fp20;
- (id)initCopyWithSession:(id)fp8 sourceURI:(id)fp12 destinationURI:(id)fp16 token:(id)fp20;
- (void)finalizeOperation;

@end

@interface DMDAVHead : DotMacKitDAVRequest
{
}

+ (id)headRequestWithSession:(id)fp8 URI:(id)fp12;
- (id)initHeadWithSession:(id)fp8 URI:(id)fp12;
- (void)finalizeOperation;

@end

@interface DMDAVGet : DotMacKitDAVRequest
{
    _DMDAVGetToFileReader *_myReader;
    NSData *_myData;
}

+ (id)getRequestWithSession:(id)fp8 URI:(id)fp12 ifModifiedSince:(id)fp16 includeRangeHeader:(BOOL)fp20 rangeStart:(long)fp24 rangeEnd:(long)fp28;
- (id)initGetWithSession:(id)fp8 URI:(id)fp12 ifModifiedSince:(id)fp16 includeRangeHeader:(BOOL)fp20 rangeStart:(long)fp24 rangeEnd:(long)fp28;
- (id)data;
- (void)finalizeOperation;
- (void)dealloc;

@end

@interface DMDAVPost : DotMacKitDAVRequest
{
}

+ (id)postRequestWithSession:(id)fp8 path:(id)fp12 data:(id)fp16;
- (id)initPostWithSession:(id)fp8 path:(id)fp12 data:(id)fp16;
- (id)data;
- (void)finalizeOperation;

@end

@interface DMDAVCreate : DotMacKitDAVRequest
{
}

+ (id)dmCreateRequestWithSession:(id)fp8 data:(id)fp12 props:(id)fp16 URI:(id)fp20;
+ (id)dmCreateRequestWithSession:(id)fp8 file:(id)fp12 props:(id)fp16 URI:(id)fp20;
- (id)dmCreateWithSession:(id)fp8 data:(id)fp12 props:(id)fp16 URI:(id)fp20;
- (void)addPropHeaders:(id)fp8;
- (void)finalizeOperation;

@end

@interface DMDAVPut : DotMacKitDAVRequest
{
}

+ (id)putRequestWithSession:(id)fp8 data:(id)fp12 URI:(id)fp16 includeRangeHeader:(BOOL)fp20 rangeStart:(long)fp24 rangeEnd:(long)fp28 token:(id)fp32;
+ (id)putRequestWithSession:(id)fp8 file:(id)fp12 URI:(id)fp16 token:(id)fp20;
- (id)initPutWithSession:(id)fp8 data:(id)fp12 URI:(id)fp16 includeRangeHeader:(BOOL)fp20 rangeStart:(long)fp24 rangeEnd:(long)fp28 token:(id)fp32;
- (void)finalizeOperation;

@end

@interface _DMDAVGetToFileReader : NSObject <DAVResponseBodyReader>
{
    NSString *_localPath;
    NSFileHandle *_fileHandle;
    _DMDAVDataReader *_standardReader;
    DMDataFromFile *_mappedData;
}

+ (void)initialize;
- (id)initWithSourcePath:(id)fp8;
- (void)dealloc;
- (BOOL)request:(id)fp8 acceptResponseWithHTTPStatusCode:(int)fp12;
- (void)request:(id)fp8 readResponseBody:(id)fp12;
- (id)data;
- (id)mappedData;
- (id)localPath;

@end

@interface _DMDAVDataReader : NSObject <DAVResponseBodyReader>
{
    NSMutableData *_data;
}

- (id)init;
- (void)dealloc;
- (BOOL)request:(id)fp8 acceptResponseWithHTTPStatusCode:(int)fp12;
- (void)request:(id)fp8 readResponseBody:(id)fp12;
- (id)data;

@end

@interface DMLocalMessageCache : NSObject <DMMessageStore>
{
    DMMemberAccount *_credentials;
    NSString *_localUserName;
    NSString *_localUserFolder;
    NSString *_libraryFolder;
    NSString *_appSupportFolder;
    NSString *_dmPubSubFolder;
    NSString *_dmUsersFolder;
    NSString *_dmUserFolder;
    NSString *_subsFolder;
    NSString *_subsFile;
    NSString *_subsLockFile;
    NSString *_topicHostsFolder;
    NSString *_topicHostFolder;
    NSString *_invitationsFile;
    NSString *_invitationsLockFile;
    NSString *_invitesUpdateLockFile;
    NSString *_invitesUpdaterTagLockFile;
    NSString *_invitesUpdaterTagFile;
    NSString *_invitesInstanceTagFile;
    NSString *_invitesProcessTagFile;
    NSString *_invitesSystemTagFile;
}

+ (id)localCacheWithCredentials:(id)fp8;
- (id)initLocalCacheWithCredentials:(id)fp8;
- (id)credentials;
- (int)addTopic:(id)fp8 handler:(id)fp12;
- (int)removeTopic:(id)fp8 handler:(id)fp12;
- (id)topicsWithHandler:(id)fp8;
- (int)topicExists:(id)fp8 handler:(id)fp12;
- (int)addMessage:(id)fp8 toTopic:(id)fp12 handler:(id)fp16;
- (BOOL)_validatedLocallyPublishedMessageWithID:(id)fp8 inTopic:(id)fp12;
- (id)managedPropsForMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)newMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)messagesInTopic:(id)fp8 handler:(id)fp12;
- (id)messageWithID:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (id)newestMessageInTopic:(id)fp8 handler:(id)fp12;
- (id)oldestMessageInTopic:(id)fp8 handler:(id)fp12;
- (int)removeMessageWithID:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (int)removeMessagesInTopic:(id)fp8 handler:(id)fp12;
- (int)setExpirationDate:(id)fp8 andTTL:(double)fp12 forMessageWithID:(id)fp20 inTopic:(id)fp24 handler:(id)fp28;
- (id)resetTimeToLive:(double)fp8 forMessageWithID:(id)fp16 inTopic:(id)fp20 handler:(id)fp24;
- (int)resetTimeToLiveForMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)payloadForMessage:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (id)_localUserFolder;
- (id)_libraryFolder;
- (id)_appSupportFolder;
- (id)_dmPubSubFolder;
- (id)_dmUsersFolder;
- (id)_dmUserFolder;
- (id)_subsFolder;
- (id)_subsFile;
- (id)_subsLockFile;
- (id)_invitationsFile;
- (id)_invitationsLockFile;
- (id)_topicHostsFolder;
- (id)_topicHostFolderForTopic:(id)fp8;
- (id)_topicChannelsFolderForTopic:(id)fp8;
- (id)_topicChannelFolderForTopic:(id)fp8;
- (id)_topicsFolderForTopic:(id)fp8;
- (id)_topicFolderForTopic:(id)fp8;
- (id)_lockFileForTopic:(id)fp8;
- (id)_messagesFolderForTopic:(id)fp8;
- (id)_tempMessageFolderForMessageWithID:(id)fp8 inTopic:(id)fp12;
- (id)_tempManagedPropsFileForMessageWithID:(id)fp8 inTopic:(id)fp12;
- (id)_tempUserDefinedPropsFileForMessageWithID:(id)fp8 inTopic:(id)fp12;
- (id)_tempPayloadFileForMessageWithID:(id)fp8 inTopic:(id)fp12;
- (id)_locallyPublishedMessageFolderForMessageWithID:(id)fp8 inTopic:(id)fp12;
- (id)_messageFolderForMessageWithID:(id)fp8 inTopic:(id)fp12;
- (id)_managedPropsFileForMessageWithID:(id)fp8 inTopic:(id)fp12;
- (id)_userDefinedPropsFileForMessageWithID:(id)fp8 inTopic:(id)fp12;
- (id)_payloadFileForMessageWithID:(id)fp8 inTopic:(id)fp12;
- (id)_listingLockFileForTopic:(id)fp8;
- (id)_updateLockFileForTopic:(id)fp8;
- (id)_tagLockFileForTopic:(id)fp8;
- (id)_updaterTagFileForTopic:(id)fp8;
- (id)_instanceTagFileForTopic:(id)fp8;
- (id)_processTagFileForTopic:(id)fp8;
- (id)_systemTagFileForTopic:(id)fp8;
- (id)_subsFilesForDMUser:(id)fp8;
- (int)setAccess:(id)fp8 toTopic:(id)fp12 forPrincipals:(id)fp16 handler:(id)fp20;
- (id)accessToTopic:(id)fp8 forPrincipals:(id)fp12 handler:(id)fp16;
- (void)dealloc;

@end

@interface DotMacKit_ay_InterThreadManager : NSObject
{
}

+ (void)initialize;
+ (void)threadDied:(id)fp8;
+ (void)handlePortMessage:(id)fp8;

@end

@interface NSNotificationCenter (DotMacKit_ay_InterThreadMessaging)
- (void)DotMacKit_ay_postNotification:(id)fp8 inThread:(id)fp12;
- (void)DotMacKit_ay_postNotification:(id)fp8 inThread:(id)fp12 beforeDate:(id)fp16;
- (void)DotMacKit_ay_postNotificationName:(id)fp8 object:(id)fp12 inThread:(id)fp16;
- (void)DotMacKit_ay_postNotificationName:(id)fp8 object:(id)fp12 inThread:(id)fp16 beforeDate:(id)fp20;
- (void)DotMacKit_ay_postNotificationName:(id)fp8 object:(id)fp12 userInfo:(id)fp16 inThread:(id)fp20;
- (void)DotMacKit_ay_postNotificationName:(id)fp8 object:(id)fp12 userInfo:(id)fp16 inThread:(id)fp20 beforeDate:(id)fp24;
@end

@interface NSObject (DotMacKit_ay_InterThreadMessaging)
- (void)DotMacKit_ay_performSelector:(SEL)fp8 inThread:(id)fp12;
- (void)DotMacKit_ay_performSelector:(SEL)fp8 inThread:(id)fp12 beforeDate:(id)fp16;
- (void)DotMacKit_ay_performSelector:(SEL)fp8 withObject:(id)fp12 inThread:(id)fp16;
- (void)DotMacKit_ay_performSelector:(SEL)fp8 withObject:(id)fp12 inThread:(id)fp16 beforeDate:(id)fp20;
- (void)DotMacKit_ay_performSelector:(SEL)fp8 withObject:(id)fp12 withObject:(id)fp16 inThread:(id)fp20;
- (void)DotMacKit_ay_performSelector:(SEL)fp8 withObject:(id)fp12 withObject:(id)fp16 inThread:(id)fp20 beforeDate:(id)fp24;
@end

@interface NSThread (DotMacKitInterThreadMessaging)
+ (void)DotMacKit_ay_prepareForInterThreadMessages;
@end

@interface DotMacKitAYError : NSObject <NSCopying, NSCoding>
{
    void *_reserved;
    int _code;
    NSString *_domain;
    NSDictionary *_userInfo;
}

+ (id)errorWithDomain:(id)fp8 code:(int)fp12 userInfo:(id)fp16;
- (id)initWithDomain:(id)fp8 code:(int)fp12 userInfo:(id)fp16;
- (void)dealloc;
- (int)code;
- (id)domain;
- (id)userInfo;
- (id)_builtInLocalizedDescription;
- (id)localizedDescription;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface DotMacKitDAVAdapter : NSObject
{
}

- (void)session:(id)fp8 createdRequest:(id)fp12;
- (void)session:(id)fp8 willDestroyRequest:(id)fp12;

@end

@interface DMIdentityStore : NSObject <DMCredential>
{
    NSMutableDictionary *_credential_info;
    NSString *_app_id;
    NSString *_app_name;
}

- (id)initWithName:(id)fp8 password:(id)fp12 owner:(id)fp16 applicationID:(id)fp20;
- (id)init;
- (id)name;
- (id)password;
- (id)owner;
- (id)applicationID;
- (id)applicationName;
- (void)setApplicationName:(id)fp8;
- (void)setApplicationID:(id)fp8;
- (void)_setApplicationID:(id)fp8;
- (void)_setName:(id)fp8;
- (void)_setPassword:(id)fp8;
- (void)_setOwner:(id)fp8;
- (void)setManagedName:(id)fp8;
- (id)managedName;
- (id)_credentialInfo;
- (id)_userAgent;
- (void)_setDiskHost:(id)fp8 port:(int)fp12 scheme:(id)fp16;
- (id)_diskURL;
- (void)dealloc;

@end

@interface ThreadSafeMutableDictionary : NSMutableDictionary
{
    NSMutableDictionary *realDictionary;
    NSLock *lock;
}

- (unsigned int)count;
- (id)keyEnumerator;
- (id)objectForKey:(id)fp8;
- (void)removeObjectForKey:(id)fp8;
- (void)setObject:(id)fp8 forKey:(id)fp12;
- (void)setValue:(id)fp8 forKey:(id)fp12;
- (id)initWithCapacity:(unsigned int)fp8;
- (id)init;
- (void)dealloc;

@end

@interface DotMacKitDAVXMLTree : NSObject
{
    DotMacKitDAVXMLNode *root;
    NSMutableArray *stack;
    NSMutableData *contentData;
}

+ (id)treeWithXMLData:(id)fp8;
- (id)initWithXMLData:(id)fp8;
- (void)dealloc;
- (id)root;

@end

@interface DotMacKitDAVXMLTree (Private)
- (void)_startelement:(const char *)fp8 attributes:(const char **)fp12;
- (void)_endelement:(const char *)fp8;
- (void)_data:(const char *)fp8 len:(int)fp12;
@end

@interface DotMacKitDAVUnlock : DotMacKitDAVRequest
{
}

+ (id)unlockRequestWithURL:(id)fp8 lockToken:(id)fp12;
+ (id)unlockRequestWithSession:(id)fp8 path:(id)fp12 lockToken:(id)fp16;
- (void)_initUnlockForToken:(id)fp8;
- (id)initUnlockWithURL:(id)fp8 lockToken:(id)fp12;
- (id)initUnlockWithSession:(id)fp8 path:(id)fp12 lockToken:(id)fp16;
- (void)finalizeOperation;

@end

@interface DotMacKitDAVLock : DotMacKitDAVRequest
{
}

+ (id)lockRequestWithURL:(id)fp8;
+ (id)lockRequestWithSession:(id)fp8 path:(id)fp12;
+ (id)relockRequestWithURL:(id)fp8 lockToken:(id)fp12;
+ (id)relockRequestWithSession:(id)fp8 path:(id)fp12 lockToken:(id)fp16;
- (void)_initLockRequest;
- (id)initLockWithURL:(id)fp8;
- (id)initLockWithSession:(id)fp8 path:(id)fp12;
- (void)_initRelockRequestWithToken:(id)fp8;
- (id)initRelockWithURL:(id)fp8 lockToken:(id)fp12;
- (id)initRelockWithSession:(id)fp8 path:(id)fp12 lockToken:(id)fp16;
- (id)lockToken;
- (int)lockTimeout;
- (id)dependenciesList;
- (void)finalizeOperation;

@end

@interface DotMacKit_DAVLockBodyReader : NSObject <DAVResponseBodyReader>
{
    NSMutableData *readData;
    NSString *lockToken;
    int timeout;
}

- (id)init;
- (void)dealloc;
- (id)lockToken;
- (int)lockTimeout;
- (void)_calculateLockInfos;
- (BOOL)request:(id)fp8 acceptResponseWithHTTPStatusCode:(int)fp12;
- (void)request:(id)fp8 readResponseBody:(id)fp12;

@end

@interface DMSecondaryUser : NSObject <DMCredential, DMPrincipal, DMTransactionGenerator>
{
    id _identity;
    id _delegate;
    BOOL _use_synchronous;
    NSString *_principalID;
}

+ (id)secondaryUserWithName:(id)fp8 password:(id)fp12 owner:(id)fp16 applicationID:(id)fp20;
+ (id)principalIDWithName:(id)fp8 andOwner:(id)fp12;
- (id)initWithName:(id)fp8 password:(id)fp12 owner:(id)fp16 applicationID:(id)fp20;
- (id)principalID;
- (id)name;
- (id)password;
- (id)owner;
- (id)applicationID;
- (id)applicationName;
- (void)setApplicationName:(id)fp8;
- (void)setApplicationID:(id)fp8;
- (void)_setApplicationID:(id)fp8;
- (void)_setName:(id)fp8;
- (void)_setPassword:(id)fp8;
- (void)setManagedName:(id)fp8;
- (id)managedName;
- (id)_accountInfo;
- (id)_userAgent;
- (void)_setDiskHost:(id)fp8 port:(int)fp12 scheme:(id)fp16;
- (id)_diskURL;
- (id)credentialsAreValid;
- (void)setTransactionDelegate:(id)fp8;
- (id)transactionDelegate;
- (void)setIsSynchronous:(BOOL)fp8;
- (BOOL)isSynchronous;
- (void)dealloc;

@end

@interface DMSuperAccount : DMAccount
{
}

+ (id)accountWithName:(id)fp8 password:(id)fp12 applicationID:(id)fp16;
- (id)initWithName:(id)fp8 password:(id)fp12 applicationID:(id)fp16;
- (id)init;
- (id)name;
- (id)applicationID;
- (void)setApplicationName:(id)fp8;
- (id)applicationName;
- (void)setManagedName:(id)fp8;
- (id)managedName;

@end

@interface NSURL (DotMacKitDAVAdditions)
+ (int)DotMacKitclassicPortForScheme:(id)fp8;
+ (id)DotMacKitURLWithDirtyString:(id)fp8;
+ (id)DotMacKitURLWithScheme:(id)fp8 host:(id)fp12 port:(int)fp16 uri:(id)fp20;
- (id)DotMacKitinitWithDirtyString:(id)fp8;
- (id)DotMacKituri;
- (id)DotMacKitURLWithUsername:(id)fp8;
- (id)DotMacKitURLWithoutUsername;
- (id)DotMacKitURLWithoutPassword;
- (id)DotMacKitinitWithScheme:(id)fp8 host:(id)fp12 port:(int)fp16 uri:(id)fp20;
@end

@interface NSString (DotMacKitDAVAdditions)
+ (unsigned int)DotMacKitencodingForIANACharSetName:(id)fp8;
+ (id)DotMacKitIANACharSetNameFromEncoding:(unsigned int)fp8;
- (id)DotMacKitstringByXMLQuoting;
- (id)DotMacKitstringByURLQuotingWithCharactersToEscape:(id)fp8;
- (id)DotMacKitstringByURLQuoting;
- (id)DotMacKitstringByURLUnquoting;
- (id)DotMacKitmimeAnalysis;
@end

@interface NSDictionary (DotMacKitDAVHasKeyAddition)
- (BOOL)DotMacKithasKey:(id)fp8;
@end

@interface DMGroup : NSObject <DMPrincipal, DMTransactionGenerator>
{
    NSString *_name;
    id _owner;
    id _delegate;
    BOOL _use_synchronous;
    NSString *_principalID;
}

+ (id)groupWithName:(id)fp8 andOwner:(id)fp12;
+ (id)principalIDWithName:(id)fp8 andOwner:(id)fp12;
- (id)name;
- (void)setName:(id)fp8;
- (id)owner;
- (id)ownerAccount;
- (void)setOwnerAccount:(id)fp8;
- (id)initWithName:(id)fp8 andOwner:(id)fp12;
- (void)dealloc;
- (id)addMembers:(id)fp8;
- (id)removeMembers:(id)fp8;
- (id)members;
- (void)setTransactionDelegate:(id)fp8;
- (id)transactionDelegate;
- (void)setIsSynchronous:(BOOL)fp8;
- (BOOL)isSynchronous;
- (id)principalID;

@end

@interface DMTopic : NSObject <DMTransactionGenerator>
{
    NSString *_name;
    NSString *_owner;
    DMMemberAccount *_credentials;
    NSString *_app_id;
    NSString *_topic_id;
    NSString *_launchables_id;
    id _message_session;
    DMMessageCache *_message_cache;
    id _transaction_delegate;
    BOOL _use_synchronous;
    BOOL _isAutoArrivalEnabled;
}

+ (id)topicWithName:(id)fp8 owner:(id)fp12 applicationID:(id)fp16 andCredentials:(id)fp20;
- (id)initTopicWithName:(id)fp8 owner:(id)fp12 applicationID:(id)fp16 andCredentials:(id)fp20;
- (id)_launchablesID;
- (id)_messageSession;
- (id)_messageCache;
- (void)_setMessageSession:(id)fp8;
- (void)_setMessageCache:(id)fp8;
- (id)_topicID;
- (id)applicationID;
- (void)setApplicationID:(id)fp8;
- (id)name;
- (id)owner;
- (id)credentials;
- (id)newMessages;
- (id)messages;
- (void)_markAllMessagesAsSeen;
- (id)messageWithID:(id)fp8;
- (id)newestMessage;
- (id)oldestMessage;
- (id)exists;
- (id)removeMessageWithID:(id)fp8;
- (id)removeMessages;
- (void)setIsAutoArrivalEnabledForMessagePayloads:(BOOL)fp8;
- (BOOL)isAutoArrivalEnabledForMessagePayloads;
- (void)dealloc;
- (id)resetTimeToLive:(double)fp8 forMessageWithID:(id)fp16;
- (void)setTransactionDelegate:(id)fp8;
- (id)transactionDelegate;
- (void)setIsSynchronous:(BOOL)fp8;
- (BOOL)isSynchronous;

@end

@interface DMMessageCache : NSObject
{
    DMMemberAccount *_credentials;
    DMLocalMessageCache *_localCache;
    DMRemoteMessageCache *_remoteCache;
    id _messageSession;
}

+ (id)messageCacheWithCredentials:(id)fp8;
- (id)initMessageCacheWithCredentials:(id)fp8;
- (id)credentials;
- (void)setMessageSession:(id)fp8;
- (id)messageSession;
- (int)addTopic:(id)fp8 handler:(id)fp12;
- (int)removeTopic:(id)fp8 handler:(id)fp12;
- (id)topicsWithHandler:(id)fp8;
- (int)topicExists:(id)fp8 handler:(id)fp12;
- (int)addMessage:(id)fp8 toTopic:(id)fp12 handler:(id)fp16;
- (id)managedPropsForMessagesInTopic:(id)fp8 handler:(id)fp12;
- (int)_performUpdateForTopic:(id)fp8 handler:(id)fp12;
- (int)_performInvitationsUpdateWithHandler:(id)fp8;
- (id)messagesInTopic:(id)fp8 handler:(id)fp12;
- (id)messageWithID:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (id)newestMessageInTopic:(id)fp8 handler:(id)fp12;
- (id)oldestMessageInTopic:(id)fp8 handler:(id)fp12;
- (int)removeMessageWithID:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (int)removeMessagesInTopic:(id)fp8 handler:(id)fp12;
- (int)resetTimeToLive:(double)fp8 forMessageWithID:(id)fp16 inTopic:(id)fp20 handler:(id)fp24;
- (int)resetTimeToLiveForMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)payloadForMessage:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (int)_removeMessagesInLocalList:(id)fp8 notContainedInRemoteList:(id)fp12 forTopic:(id)fp16 handler:(id)fp20;
- (int)_addMessagesInRemoteList:(id)fp8 notContainedInLocalList:(id)fp12 forTopic:(id)fp16 handler:(id)fp20;
- (BOOL)_messageList:(id)fp8 containsMessageWithID:(id)fp12;
- (id)_managedPropsFromList:(id)fp8 forMessageWithID:(id)fp12;
- (BOOL)topic:(id)fp8 containsMessageNewerThanMessageWithProps:(id)fp12;
- (id)messagesInTopic:(id)fp8 newerThanMessageWithProps:(id)fp12;
- (int)setAccess:(id)fp8 toTopic:(id)fp12 forPrincipals:(id)fp16 handler:(id)fp20;
- (id)accessToTopic:(id)fp8 forPrincipals:(id)fp12 handler:(id)fp16;
- (id)_subsLockFile;
- (id)_subsFile;
- (id)_subsFolder;
- (id)_invitationsFile;
- (id)_invitationsLockFile;
- (id)_listingLockFileForTopic:(id)fp8;
- (id)_updateLockFileForTopic:(id)fp8;
- (id)_tagLockFileForTopic:(id)fp8;
- (id)_updaterTagFileForTopic:(id)fp8;
- (id)_instanceTagFileForTopic:(id)fp8;
- (id)_processTagFileForTopic:(id)fp8;
- (id)_systemTagFileForTopic:(id)fp8;
- (id)_topicSubscriptions;
- (id)_subscriptionForTopic:(id)fp8;
- (BOOL)_addSubscriptionForTopic:(id)fp8;
- (id)_removeSubscriptionForTopic:(id)fp8;
- (void)_setStatus:(id)fp8 forSubscribedTopic:(id)fp12;
- (id)_statusForSubscribedTopic:(id)fp8;
- (void)_setObserverID:(id)fp8 forSubscribedTopic:(id)fp12;
- (id)_observerIDForSubscribedTopic:(id)fp8;
- (void)_setMessageMarker:(id)fp8 forSubscribedTopic:(id)fp12;
- (id)_messageMarkerForSubscribedTopic:(id)fp8;
- (id)_invitationStatusForTopic:(id)fp8;
- (void)_setInvitationStatus:(id)fp8 forTopic:(id)fp12;
- (id)_invitationTagForTopic:(id)fp8;
- (void)_setInvitationTag:(id)fp8 forTopic:(id)fp12;
- (void)_setAutoArrivalFlag:(BOOL)fp8 forSubscribedTopic:(id)fp12;
- (BOOL)_autoArrivalFlagForSubscribedTopic:(id)fp8;
- (void)_markAllMessagesAsSeenInTopic:(id)fp8;
- (void)_markAllInvitationsAsSeenWithLocking:(BOOL)fp8;
- (id)_unseenInvitedTopicsWithLocking:(BOOL)fp8;
- (id)_allUnsubscribedInvitedTopicsWithLocking:(BOOL)fp8;
- (BOOL)_setValue:(id)fp8 forKey:(id)fp12 inSubscriptionForTopic:(id)fp16 withLocking:(BOOL)fp20;
- (id)_valueForKey:(id)fp8 inSubscriptionForTopic:(id)fp12 withLocking:(BOOL)fp16;
- (void)dealloc;

@end

@interface DMRemoteMessageCache : NSObject <DMMessageStore>
{
    DMMemberAccount *_credentials;
    NSLock *_iDiskSessionsLock;
    NSMutableDictionary *_iDiskSessions;
}

+ (id)remoteCacheWithCredentials:(id)fp8;
- (id)initRemoteCacheWithCredentials:(id)fp8;
- (id)credentials;
- (id)_iDiskSessionForTopic:(id)fp8;
- (id)_iDiskSessionsLock;
- (int)addTopic:(id)fp8 handler:(id)fp12;
- (int)removeTopic:(id)fp8 handler:(id)fp12;
- (id)topicsWithHandler:(id)fp8;
- (int)topicExists:(id)fp8 handler:(id)fp12;
- (int)addMessage:(id)fp8 toTopic:(id)fp12 handler:(id)fp16;
- (id)newMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)messagesInTopic:(id)fp8 handler:(id)fp12;
- (id)managedPropsForMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)messageWithID:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (id)newestMessageInTopic:(id)fp8 handler:(id)fp12;
- (id)oldestMessageInTopic:(id)fp8 handler:(id)fp12;
- (int)removeMessageWithID:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (int)removeMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)resetTimeToLive:(double)fp8 forMessageWithID:(id)fp16 inTopic:(id)fp20 handler:(id)fp24;
- (int)resetTimeToLiveForMessagesInTopic:(id)fp8 handler:(id)fp12;
- (id)payloadForMessage:(id)fp8 inTopic:(id)fp12 handler:(id)fp16;
- (int)setAccess:(id)fp8 toTopic:(id)fp12 forPrincipals:(id)fp16 handler:(id)fp20;
- (id)accessToTopic:(id)fp8 forPrincipals:(id)fp12 handler:(id)fp16;
- (id)_topicChannelFolderForTopic:(id)fp8;
- (id)_topicsFolderForTopic:(id)fp8;
- (id)_topicFolderForTopic:(id)fp8;
- (id)_messagesFolderForTopic:(id)fp8;
- (id)_messageFileForMessageWithID:(id)fp8 inTopic:(id)fp12;
- (void)dealloc;

@end

@interface DotMacKitDAVDelete : DotMacKitDAVRequest
{
}

+ (id)deleteRequestWithURL:(id)fp8;
+ (id)deleteRequestWithSession:(id)fp8 path:(id)fp12;
- (id)initDeleteWithURL:(id)fp8;
- (id)initDeleteWithSession:(id)fp8 path:(id)fp12;
- (id)dependenciesList;
- (void)finalizeOperation;

@end

@interface DotMacKitDAVMakeCollection : DotMacKitDAVRequest
{
}

+ (id)makeCollectionRequestWithURL:(id)fp8;
+ (id)makeCollectionRequestWithSession:(id)fp8 path:(id)fp12;
- (id)initMakeCollectionWithURL:(id)fp8;
- (id)initMakeCollectionWithSession:(id)fp8 path:(id)fp12;
- (void)finalizeOperation;

@end

@interface DotMacKitDAVListMembers : DotMacKitDAVRequest
{
    BOOL showHidden;
}

+ (id)listMembersRequestWithURL:(id)fp8 showHidden:(BOOL)fp12;
+ (id)listMembersRequestWithSession:(id)fp8 path:(id)fp12 showHidden:(BOOL)fp16;
- (id)initListMembersWithURL:(id)fp8 showHidden:(BOOL)fp12;
- (id)initListMembersWithSession:(id)fp8 path:(id)fp12 showHidden:(BOOL)fp16;
- (id)members;
- (void)finalizeOperation;

@end

@interface DotMacKitDAVGetInfos : DotMacKitDAVRequest
{
}

+ (id)getInfosRequestWithURL:(id)fp8;
+ (id)getInfosRequestWithSession:(id)fp8 path:(id)fp12;
- (id)initGetInfosWithURL:(id)fp8;
- (id)initGetInfosWithSession:(id)fp8 path:(id)fp12;
- (id)infos;
- (void)finalizeOperation;

@end

@interface DMDataFromFile : NSData
{
    NSData *_embeddedData;
    NSMutableArray *_previousData;
    NSString *_localPath;
    NSLock *_dataLock;
}

+ (id)dataWithLocalFile:(id)fp8;
- (id)initWithLocalFile:(id)fp8;
- (void)reinitialize;
- (const void *)bytes;
- (unsigned int)length;
- (void)_setEmbeddedData:(id)fp8;
- (void)dealloc;

@end

@interface DMDAVPropertiesRequest : DotMacKitDAVRequest
{
}

+ (id)propPatchWithSession:(id)fp8 URI:(id)fp12 updatingProps:(id)fp16 inNameSpace:(id)fp20;
+ (id)propFindRequestWithSession:(id)fp8 withDepth:(id)fp12 URI:(id)fp16 lookingForProps:(id)fp20;
- (id)initPropPatchWithSession:(id)fp8 URI:(id)fp12 updatingProps:(id)fp16 inNameSpace:(id)fp20;
- (id)initPropFindWithSession:(id)fp8 withDepth:(id)fp12 URI:(id)fp16 lookingForProps:(id)fp20;
- (void)_initForPropPatchUpdatingProps:(id)fp8 inNameSpace:(id)fp12;
- (void)_initForPropFindWithDepth:(id)fp8 lookingForProps:(id)fp12;

@end

@interface DotMacKitDAVXMLNode (DMDAVXMLNodeAddition)
- (id)_rawData;
@end

@interface DMMessagePublisher : NSObject <DMTransactionGenerator, DMSecurity>
{
    DMMemberAccount *_credentials;
    BOOL _use_synchronous;
    id _transaction_delegate;
    id _message_cache;
    double _defaultTTL;
}

+ (void)initialize;
+ (id)messagePublisherWithCredentials:(id)fp8;
- (BOOL)_canPublishNow;
- (id)initMessagePublisherWithCredentials:(id)fp8;
- (id)_messageCache;
- (id)credentials;
- (void)setTransactionDelegate:(id)fp8;
- (id)transactionDelegate;
- (void)setIsSynchronous:(BOOL)fp8;
- (BOOL)isSynchronous;
- (id)accessToEntity:(id)fp8 forPrincipal:(id)fp12;
- (id)accessToEntity:(id)fp8 forPrincipals:(id)fp12;
- (id)setAccess:(id)fp8 toEntity:(id)fp12 forPrincipals:(id)fp16;
- (id)resetAccessToChildrenOfEntity:(id)fp8;
- (id)topicNamed:(id)fp8;
- (id)topicNamed:(id)fp8 andOwnedBy:(id)fp12;
- (id)topicNamed:(id)fp8 andOwnedBy:(id)fp12 withApplicationID:(id)fp16;
- (id)createTopicNamed:(id)fp8;
- (id)topics;
- (id)removeTopicNamed:(id)fp8;
- (id)publishMessage:(id)fp8 toTopic:(id)fp12;
- (int)setDefaultTimeToLive:(double)fp8;
- (double)defaultTimeToLive;
- (id)_publishableTopicForID:(id)fp8;
- (void)dealloc;

@end

@interface DMPublicationRequest : DotMacKitAYOperation
{
    DMMessage *_message;
    DMTopic *_topic;
    DMMessagePublisher *_publisher;
    struct __DMNSession *_notifySession;
}

- (id)initWithMessage:(id)fp8 topic:(id)fp12 andPublisher:(id)fp16;
- (void)dispatch;
- (void)dealloc;

@end

@interface DMPublishableTopicsRequest : DotMacKitAYOperation
{
    DMMessagePublisher *_publisher;
    struct __DMNSession *_notifySession;
}

- (id)initWithPublisher:(id)fp8;
- (void)dispatch;
- (void)dealloc;

@end

@interface DMTopicRemovalRequest : DotMacKitAYOperation
{
    DMTopic *_topic;
    DMMessagePublisher *_publisher;
    struct __DMNSession *_notifySession;
}

- (id)initWithTopic:(id)fp8 andPublisher:(id)fp12;
- (void)dispatch;
- (void)dealloc;

@end

@interface DMTopicCreationRequest : DotMacKitAYOperation
{
    DMTopic *_topic;
    DMMessagePublisher *_publisher;
    struct __DMNSession *_notifySession;
}

- (id)initWithTopic:(id)fp8 andPublisher:(id)fp12;
- (void)dispatch;
- (void)dealloc;

@end

@interface DMMemberAccount : DMAccount <DMTransactionGenerator>
{
    id _delegate;
    BOOL _use_synchronous;
    id _info_session;
    id _info_session2;
    NSURL *_info_url;
    NSURL *_info_url2;
    NSLock *_info_lock;
    NSString *_user_agent;
    id _my_private_ivars;
}

+ (void)initialize;
+ (id)accountFromPreferencesWithApplicationID:(id)fp8;
+ (id)accountWithName:(id)fp8 password:(id)fp12 applicationID:(id)fp16;
+ (void)signUpNewMember;
+ (void)signUpNewMemberWithApplicationID:(id)fp8;
+ (id)signUpURL;
+ (id)signUpURLWithApplicationID:(id)fp8;
+ (id)_referralSignUpURLWithLookupPath:(id)fp8 andApplicationID:(id)fp12;
+ (id)_dotMacAccountNameFromSystem;
+ (id)_dotMacAccountPasswordFromSystem;
+ (id)_fetchConfigsWithURL:(id)fp8;
+ (id)_getConfigDictionaryAtURL:(id)fp8;
+ (BOOL)_openPageInDefaultBrowser:(id)fp8;
- (id)initFromPreferencesWithApplicationID:(id)fp8;
- (id)initWithName:(id)fp8 password:(id)fp12 applicationID:(id)fp16;
- (id)init;
- (id)_iDiskSession;
- (int)validateCredentials;
- (BOOL)matchesSystemCredentials;
- (void)setTransactionDelegate:(id)fp8;
- (id)transactionDelegate;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)setIsSynchronous:(BOOL)fp8;
- (BOOL)isSynchronous;
- (id)servicesAvailableForAccount;
- (id)_groupMemberships;
- (id)daysLeftUntilExpiration;
- (id)canUpgradeAccount;
- (void)upgradeAccount;
- (id)accountUpgradeURL;
- (void)dealloc;
- (id)_queryAccountForKey:(id)fp8 synchronousFlag:(BOOL)fp12 delegate:(id)fp16;
- (void)_initInfoSession;
- (id)_infoSession;
- (id)_infoSession2;
- (id)_accountInfoPostHandler:(id)fp8;
- (id)_parseGroupMemberships:(id)fp8;
- (id)_booleanNumberFromString:(id)fp8;
- (id)_parseServicesAvailable:(id)fp8;
- (BOOL)_hasPublicAccess;
- (id)managedName;
- (void)_setUserAgent:(id)fp8;
- (id)_userAgent;
- (id)secondaryUserNames;
- (id)createSecondaryUserWithName:(id)fp8 andPassword:(id)fp12;
- (id)removeSecondaryUserNamed:(id)fp8;
- (id)resetPassword:(id)fp8 forSecondaryUserNamed:(id)fp12;
- (id)groupNames;
- (id)groupNamed:(id)fp8;
- (id)createGroupWithName:(id)fp8 andMembers:(id)fp12;
- (id)removeGroupNamed:(id)fp8;

@end

@interface DotMacKitDAVRequest (DAVMultiStatusRequest)
+ (id)multiStatusRequestWithURL:(id)fp8 method:(id)fp12;
+ (id)multiStatusRequestWithSession:(id)fp8 method:(id)fp12 path:(id)fp16;
+ (id)multiStatusRequestWithURL:(id)fp8 method:(id)fp12 responseClass:(Class)fp16;
+ (id)multiStatusRequestWithSession:(id)fp8 method:(id)fp12 path:(id)fp16 responseClass:(Class)fp20;
+ (id)propFindRequestWithURL:(id)fp8 withDepth:(id)fp12 lookingForProps:(id)fp16;
+ (id)propFindRequestWithSession:(id)fp8 withDepth:(id)fp12 path:(id)fp16 lookingForProps:(id)fp20;
+ (id)propPatchRequestWithURL:(id)fp8 patchProperties:(id)fp12 deleteProperties:(id)fp16;
+ (id)propPatchRequestWithSession:(id)fp8 path:(id)fp12 patchProperties:(id)fp16 deleteProperties:(id)fp20;
- (void)_initReaderWithClass:(Class)fp8;
- (id)initMultiStatusRequestWithURL:(id)fp8 method:(id)fp12;
- (id)initMultiStatusRequestWithSession:(id)fp8 method:(id)fp12 path:(id)fp16;
- (id)initMultiStatusRequestWithURL:(id)fp8 method:(id)fp12 responseClass:(Class)fp16;
- (id)initMultiStatusRequestWithSession:(id)fp8 method:(id)fp12 path:(id)fp16 responseClass:(Class)fp20;
- (id)responses;
- (void)_initForPropFindWithDepth:(id)fp8 lookingForProps:(id)fp12;
- (id)initPropFindWithURL:(id)fp8 withDepth:(id)fp12 lookingForProps:(id)fp16;
- (id)initPropFindWithSession:(id)fp8 withDepth:(id)fp12 path:(id)fp16 lookingForProps:(id)fp20;
- (void)_initForPropPatchWithPatchDict:(id)fp8 deleteProperties:(id)fp12;
- (id)initPropPatchWithURL:(id)fp8 patchProperties:(id)fp12 deleteProperties:(id)fp16;
- (id)initPropPatchWithSession:(id)fp8 path:(id)fp12 patchProperties:(id)fp16 deleteProperties:(id)fp20;
@end

@interface DMUtilities : NSObject
{
}

+ (void)initialize;
+ (BOOL)_doErrorLogging;
+ (BOOL)_doDebugLogging;
+ (id)_processName;
+ (id)_processNameData;
+ (id)_daemonLockFile;
+ (id)_createGuid;
+ (id)_managedPropsForMessage:(id)fp8;
+ (id)_messageWithManagedProps:(id)fp8 userProps:(id)fp12 andPayload:(id)fp16;
+ (id)_expirationDateForMessageWithTTL:(double)fp8 andStartDate:(id)fp16;
+ (BOOL)_isMessageExpiredWithManagedProps:(id)fp8;
+ (id)_encodeObject:(id)fp8;
+ (id)_decodeObjectData:(id)fp8;
+ (id)_dispatchRequest:(id)fp8 synchronously:(BOOL)fp12 withDelegate:(id)fp16 postHandler:(SEL)fp20 andNotes:(id)fp24 requiringResult:(BOOL)fp28;
+ (id)_loggedInUserName;
+ (id)principalPropertiesFromPrincipalID:(id)fp8;
+ (id)_serializeDictionary:(id)fp8;
+ (id)_deserializeDictionaryData:(id)fp8;
+ (id)_plistAtPath:(id)fp8;
+ (BOOL)_createPlist:(id)fp8 atPath:(id)fp12;
+ (int)_createLockFileAtPath:(id)fp8 withWait:(unsigned int)fp12;
+ (void)_removeLockFileAtPath:(id)fp8;
+ (BOOL)_createdDirectoryAtPath:(id)fp8;
+ (id)_parentDirectoryOfPath:(id)fp8;
+ (BOOL)_isValidMessageTTL:(double)fp8;
+ (id)_deriveErrorFromInfo:(id)fp8 forMasterRequest:(id)fp12;

@end

@interface DMKLockPort : NSObject
{
    id _mutex;
}

- (id)initWithName:(id)fp8;
- (void)dealloc;

@end

@interface DMSetMessageTTLRequest : DotMacKitAYOperation
{
    DMTopic *_topic;
    NSString *_messageID;
    double _ttl;
}

- (id)initWithTopic:(id)fp8 messageID:(id)fp12 andTTL:(double)fp16;
- (void)dispatch;
- (void)dealloc;

@end

@interface DMTopicAccessRequest : DotMacKitAYOperation
{
    DMTopic *_topic;
    NSArray *_principals;
}

- (id)initWithTopic:(id)fp8 andPrincipals:(id)fp12;
- (void)dispatch;
- (void)dealloc;

@end

@interface DMSetTopicAccessRequest : DotMacKitAYOperation
{
    DMTopic *_topic;
    NSArray *_access;
    NSArray *_principals;
    struct __DMNSession *_notifySession;
}

- (id)initWithTopic:(id)fp8 access:(id)fp12 andPrincipals:(id)fp16;
- (void)dispatch;
- (id)acesFromRightsDictionary:(id)fp8;
- (void)addExistingInviteesFromSubscription:(id)fp8 toRightsDictionary:(id)fp12;
- (void)addNewInvitees:(id)fp8 withAccess:(id)fp12 toRightsDictionary:(id)fp16 isLaunchableScope:(BOOL)fp20;
- (id)memberListFromPrincipals:(id)fp8;
- (void)dealloc;

@end

@interface DMTopicExistsRequest : DotMacKitAYOperation
{
    DMTopic *_topic;
    struct __DMNSession *_notifySession;
}

- (id)initWithTopic:(id)fp8;
- (void)dispatch;
- (void)dealloc;

@end

@interface DMMessageRemovalRequest : DotMacKitAYOperation
{
    DMTopic *_topic;
    NSString *_messageID;
}

- (id)initWithTopic:(id)fp8 andMessageID:(id)fp12;
- (void)dispatch;
- (void)dealloc;

@end

@interface DMiDiskSession : NSObject <DMTransactionGenerator, DMSecurity>
{
    id _credentials;
    NSString *_owner;
    id _recent_lock_tokens;
    id _delegate;
    BOOL _use_synchronous;
    double _lockDuration;
    id _session_data;
    BOOL _checked;
    BOOL _checkPreAuth;
    BOOL _auto_dispatch;
    NSLock *_auth_lock;
    id _my_private_ivars;
}

+ (void)initialize;
+ (id)iDiskSessionWithCredentials:(id)fp8;
+ (id)iDiskSessionWithCredentials:(id)fp8 andOwner:(id)fp12;
+ (id)iDiskSessionWithAccount:(id)fp8;
+ (id)_iDiskSessionWithCredentials:(id)fp8 host:(id)fp12 port:(int)fp16 scheme:(id)fp20;
+ (id)_iDiskSessionWithAccount:(id)fp8 host:(id)fp12 port:(int)fp16 scheme:(id)fp20;
- (id)initWithAccount:(id)fp8;
- (id)initWithCredentials:(id)fp8;
- (id)initWithCredentials:(id)fp8 andOwner:(id)fp12;
- (id)_initWithAccount:(id)fp8 owner:(id)fp12 host:(id)fp16 port:(int)fp20 scheme:(id)fp24;
- (id)_initWithCredentials:(id)fp8 owner:(id)fp12 host:(id)fp16 port:(int)fp20 scheme:(id)fp24;
- (id)init;
- (int)validateAccess;
- (int)_validateSessionCredentials;
- (int)_validateCredentialsWithPath:(id)fp8 andDAVSession:(id)fp12;
- (void)_setUserAgent:(id)fp8;
- (void)setTransactionDelegate:(id)fp8;
- (id)transactionDelegate;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)setIsSynchronous:(BOOL)fp8;
- (BOOL)isSynchronous;
- (void)_setIsAutoDispatchEnabled:(BOOL)fp8;
- (BOOL)_isAutoDispatchEnabled;
- (id)account;
- (id)credentials;
- (id)getDataAtPath:(id)fp8;
- (id)getDataAtPath:(id)fp8 ifModifiedSince:(id)fp12;
- (id)getDataAtPath:(id)fp8 ifModifiedSince:(id)fp12 withByteRange:(struct _NSRange)fp16;
- (id)_getRequestPostHandler:(id)fp8;
- (id)_uploadData:(id)fp8 toPath:(id)fp12 withProps:(id)fp16;
- (id)_uploadData:(id)fp8 toPath:(id)fp12 withProps:(id)fp16 andHeaders:(id)fp20;
- (id)_uploadLocalFileAtPath:(id)fp8 toPath:(id)fp12 withProps:(id)fp16;
- (id)_uploadLocalFileAtPath:(id)fp8 toPath:(id)fp12 withProps:(id)fp16 andHeaders:(id)fp20;
- (id)_createCollectionAtPath:(id)fp8 withProps:(id)fp12;
- (id)putData:(id)fp8 toPath:(id)fp12;
- (id)putData:(id)fp8 toPath:(id)fp12 withHeaders:(id)fp16;
- (id)putData:(id)fp8 toPath:(id)fp12 withByteRange:(struct _NSRange)fp16;
- (id)putData:(id)fp8 toPath:(id)fp12 withByteRange:(struct _NSRange)fp16 andHeaders:(id)fp24;
- (id)_postData:(id)fp8 toPath:(const id)fp12 withHeaders:(id)fp16;
- (id)_xmlrpcRequestPostHandler:(id)fp8;
- (id)_makeXMLRPCRequest:(id)fp8 toPath:(id)fp12;
- (id)putLocalFileAtPath:(id)fp8 toPath:(id)fp12;
- (id)putLocalFileAtPath:(id)fp8 toPath:(id)fp12 withHeaders:(id)fp16;
- (id)makeCollectionAtPath:(id)fp8;
- (void)setDefaultLockDuration:(double)fp8;
- (double)defaultLockDuration;
- (id)lockResourceAtPath:(id)fp8;
- (id)lockResourceAtPath:(id)fp8 withDuration:(double)fp12;
- (id)_lockResourceAtPath:(id)fp8 withDuration:(double)fp12 andOwner:(id)fp20;
- (id)_lockRequestPostHandler:(id)fp8;
- (id)relockResourceAtPath:(id)fp8;
- (id)relockResourceAtPath:(id)fp8 withDuration:(double)fp12;
- (id)_relockResourceAtPath:(id)fp8 withDuration:(double)fp12 andOwner:(id)fp20;
- (id)unlockResourceAtPath:(id)fp8;
- (id)_unlockRequestPostHandler:(id)fp8;
- (id)moveResourceAtPath:(id)fp8 toPath:(id)fp12;
- (id)_moveSource:(id)fp8 toDestination:(id)fp12;
- (id)copyResourceAtPath:(id)fp8 toPath:(id)fp12;
- (id)_copySource:(id)fp8 toDestination:(id)fp12;
- (id)deleteResourceAtPath:(id)fp8;
- (id)_deleteRequestPostHandler:(id)fp8;
- (BOOL)resourceExistsAtPath:(id)fp8;
- (id)basicAttributesAtPath:(id)fp8;
- (id)_basicAttributesRequestPostHandler:(id)fp8;
- (id)extendedAttributesAtPath:(id)fp8;
- (id)_attributesRequestPostHandler:(id)fp8;
- (id)_attributes:(id)fp8 atPath:(id)fp12;
- (id)_accessRightsRequestPostHandler:(id)fp8;
- (id)_accessRights:(id)fp8 atPath:(id)fp12 forPrincipal:(id)fp16;
- (id)listCollectionAtPath:(id)fp8;
- (id)_listRequestPostHandler:(id)fp8;
- (id)quotaAttributes;
- (id)_quotaAttributesRequestPostHandler:(id)fp8;
- (void)_checkPreAuth;
- (BOOL)_initLockDictionary;
- (BOOL)_initSessionDataWithHost:(id)fp8 port:(int)fp12 scheme:(id)fp16;
- (id)_lockTokenForURI:(id)fp8;
- (id)_lockTokenForURI:(id)fp8 orForParent:(BOOL)fp12;
- (void)_setLockToken:(id)fp8 forURI:(id)fp12 withDuration:(double)fp16;
- (void)_removeLockTokenForURI:(id)fp8;
- (id)_queryServerForLockToken:(id)fp8;
- (void)_setCredentials:(id)fp8;
- (void)_setAccount:(id)fp8;
- (id)_issuePropPatchAtPath:(id)fp8 updatingProps:(id)fp12;
- (id)_issuePropPatchAtPath:(id)fp8 updatingProps:(id)fp12 inNameSpace:(id)fp16;
- (id)_listCollectionAtPath:(id)fp8 lookingForProps:(id)fp12;
- (id)_issuePropFindAtPath:(id)fp8 withDepth:(id)fp12 lookingForProps:(id)fp16 inNameSpace:(id)fp20;
- (id)_issuePropFindAtPath:(id)fp8 withDepth:(id)fp12 lookingForProps:(id)fp16;
- (id)_issuePropFindAtPath:(id)fp8 withDepth:(id)fp12 lookingForProps:(id)fp16 includingParent:(BOOL)fp20;
- (id)_propFindRequestPostHandler:(id)fp8;
- (void)_setSessionData:(id)fp8;
- (id)_sessionData;
- (void)_setIsChecked:(BOOL)fp8;
- (BOOL)_isChecked;
- (id)_authLock;
- (BOOL)_hasPublicUsername;
- (id)_recentLockTokens;
- (id)_iDiskPathForURI:(id)fp8;
- (id)_dispatchRequest:(id)fp8 requiringResult:(BOOL)fp12;
- (id)_dispatchRequest:(id)fp8 withPostHandler:(SEL)fp12 andNotes:(id)fp16 requiringResult:(BOOL)fp20;
- (id)_dispatchRequest:(id)fp8 withPostHandler:(SEL)fp12 requiringResult:(BOOL)fp16;
- (void)_setReadTimeOut:(unsigned int)fp8;
- (unsigned int)_readTimeOut;
- (id)owner;
- (void)_setOwner:(id)fp8;
- (void)dealloc;
- (void)_setAddTrustHeader:(BOOL)fp8;
- (void)_setTrustHeaderValue:(id)fp8;
- (BOOL)_addTrustHeader;
- (void)_setUseBasicAuth:(BOOL)fp8;
- (BOOL)_useBasicAuth;
- (void)_setContentType:(id)fp8;
- (id)_contentType;
- (void)_setDoCheckPreAuth:(BOOL)fp8;
- (BOOL)_doCheckPreAuth;
- (void)_addHeaders:(id)fp8 toRequest:(id)fp12;
- (id)accessToEntity:(id)fp8 forPrincipals:(id)fp12;
- (id)accessToEntity:(id)fp8 forPrincipal:(id)fp12;
- (id)setAccess:(id)fp8 toEntity:(id)fp12 forPrincipals:(id)fp16;
- (id)resetAccessToChildrenOfEntity:(id)fp8;

@end

@interface DMiDiskSession (DMiDiskFileManager)
- (BOOL)createDirectoryAtPath:(id)fp8 attributes:(id)fp12;
- (BOOL)createFileAtPath:(id)fp8 contents:(id)fp12 attributes:(id)fp16;
- (BOOL)copyPath:(id)fp8 toPath:(id)fp12 handler:(id)fp16;
- (BOOL)_downloadPath:(id)fp8 toPath:(id)fp12;
- (BOOL)_downloadDir:(id)fp8 toPath:(id)fp12;
- (BOOL)_downloadFile:(id)fp8 toPath:(id)fp12;
- (BOOL)_uploadPath:(id)fp8 toPath:(id)fp12;
- (BOOL)_uploadLocalFileAtPath:(id)fp8 toPath:(id)fp12;
- (BOOL)movePath:(id)fp8 toPath:(id)fp12 handler:(id)fp16;
- (BOOL)removeFileAtPath:(id)fp8 handler:(id)fp12;
- (id)contentsAtPath:(id)fp8;
- (BOOL)fileExistsAtPath:(id)fp8;
- (BOOL)fileExistsAtPath:(id)fp8 isDirectory:(char *)fp12;
- (id)directoryContentsAtPath:(id)fp8;
- (id)_detailedContentsAtPath:(id)fp8;
- (BOOL)_synchronousTransactionStatus:(id)fp8 requiringResult:(BOOL)fp12;
@end

@interface DMXMLRPCHelper : NSObject
{
}

+ (id)createXMLFrom:(id)fp8 withOrder:(id)fp12 forMethodName:(id)fp16;
+ (id)createDictionaryFromResponse:(id)fp8;

@end

@interface DMLaunchAppManager : NSObject
{
    NSMutableDictionary *_launchAppsPrefs;
    BOOL _cachedPrefs;
}

+ (id)sharedManagerWithCachedPrefs:(BOOL)fp8;
- (id)initWithCachedPrefs:(BOOL)fp8;
- (void)dealloc;
- (int)addLaunchableForTopic:(id)fp8 appBundleId:(id)fp12 executablePath:(id)fp16 appArguments:(id)fp20 launchBehavior:(int)fp24;
- (int)removeLaunchableForTopic:(id)fp8 appBundleId:(id)fp12;
- (int)removeLaunchablesForTopic:(id)fp8;
- (int)removeLaunchableToolForTopic:(id)fp8 toolPath:(id)fp12;
- (int)listLaunchAppsOnTopic:(id)fp8 intoArray:(id *)fp12;
- (void)registerHelperApplicationWithLaunchServices;
- (void)registerMainApplicationWithLaunchServices;

@end

@interface DMLaunchAppManager (Private)
- (int)launchApplicationsForTopic:(id)fp8;
@end

@interface DMLaunchAppManager (Internal)
- (int)_addLaunchAppliationToPrefs:(id)fp8 launchAppDictionary:(id)fp12 topic:(id)fp16;
- (int)_removeLaunchAppsFromPrefs:(id)fp8 topic:(id)fp12 bundle:(id)fp16 toolPath:(id)fp20;
- (void)_syncPrefsAndNotify;
- (void)_loadPreferences;
- (void)_registerForPrefsUpdateNotifications;
- (int)_copyLaunchAppInfo:(id)fp8 outURL:(struct __CFURL **)fp12 outAppType:(int *)fp16;
- (int)_launchApplication:(id)fp8;
- (int)_launchUnixExecutableAtURL:(struct __CFURL *)fp8 args:(id)fp12;
- (int)_launchBundledAppWithID:(id)fp8 atURL:(struct __CFURL *)fp12 args:(id)fp16 launchOptions:(int)fp20;
- (char **)_createLaunchArgs:(id)fp8 args:(id)fp12 outNumArgs:(int *)fp16;
@end

@interface DotMacKitAYOperation : NSObject
{
    id _asyncProxy;
    NSThread *_currentThread;
    NSThread *_baseThread;
    DotMacKitAYOperation *_parentOperation;
    DotMacKitAYOperation *_mainOperation;
    DotMacKitAYOperation *_currentChildOperation;
    id _group;
    NSLock *_operationLock;
    DotMacKitAYError *_error;
    BOOL _operationEnded;
    BOOL _operationAborted;
    BOOL _silent;
    int _currentMark;
    void *_reserved;
    id _derivedResult;
    int _derivedHttpStatusCode;
    id _notificationDelegate;
    NSMutableDictionary *_privateInfos;
}

+ (void)_initCurrentThread;
+ (void)_initMainThread;
+ (void)initialize;
+ (void)_noLockForThread:(id)fp8;
+ (void)_lockForAllThreads;
+ (BOOL)_lockWaitingForOperation;
+ (void)lockOperations;
+ (void)unlockOperations;
+ (id)mainThread;
+ (BOOL)_dispatchNextOperationInQueue;
+ (void)_workerThread;
+ (void)_launchOneThread;
+ (void)pushInvocation:(id)fp8;
+ (BOOL)popOperation:(id)fp8;
+ (void)unblockAllOperationsForGroup:(id)fp8;
+ (void)endAllPendingOperationsOfGroup:(id)fp8 withError:(id)fp12;
+ (void)abortAllOperations;
+ (void)waitForOperationsToEndWithDelegate:(id)fp8;
- (void)_setCurrentThread:(id)fp8;
- (id)init;
- (void)dealloc;
- (id)async;
- (id)syncFor:(id)fp8;
- (void)_setCurrentChildOperation:(id)fp8;
- (id)_currentChildOperation;
- (id)parentOperation;
- (id)mainOperation;
- (id)operationThread;
- (id)baseThread;
- (BOOL)isAsync;
- (void)lockOperation;
- (void)unlockOperation;
- (void)_handleEventRecursively:(id)fp8;
- (void)_sendEventToThreadLocked:(id)fp8;
- (void)sendEventToThread:(id)fp8;
- (BOOL)handleEventInThread:(id)fp8;
- (void)abortOperation;
- (void)resetOperation;
- (void)setOperationGroup:(id)fp8;
- (id)operationGroup;
- (BOOL)isRunLoopBased;
- (void)runOperationWithTimeOut:(unsigned int)fp8;
- (void)endOperationWithError:(id)fp8;
- (void)markWithTag:(int)fp8;
- (void)markWithTag:(int)fp8 notify:(BOOL)fp12;
- (int)currentMark;
- (void)setSilent:(BOOL)fp8;
- (BOOL)isSilent;
- (void)handleNotificationOfChildOperation:(id)fp8 notification:(id)fp12;
- (void)notifyWithName:(id)fp8 infos:(id)fp12;
- (void)setNotificationDelegate:(id)fp8;
- (id)notificationDelegate;
- (long long)operationProgress;
- (long long)operationTotal;
- (BOOL)operationCanAbort;
- (void)operationWillAbort;
- (void)operationHasAborted;
- (BOOL)operationWasAborted;
- (void)setError:(id)fp8;
- (id)error;
- (void)finalizeOperation;
- (void)postOperation;
- (void)setInfo:(id)fp8 forKey:(id)fp12;
- (id)infoForKey:(id)fp8;
- (void)removeInfoForKey:(id)fp8;
- (id)derivedResult;
- (void)setDerivedResult:(id)fp8;
- (int)derivedHttpStatusCode;
- (void)setDerivedHttpStatusCode:(int)fp8;

@end

@interface DotMacKit_AYProxy : NSProxy
{
    DotMacKitAYOperation *_operation;
    BOOL _asyncLaunch;
}

- (id)initWithOperation:(id)fp8;
- (void)setAsyncLaunch:(BOOL)fp8;
- (BOOL)respondsToSelector:(SEL)fp8;
- (BOOL)conformsToProtocol:(id)fp8;
- (void)forwardInvocation:(id)fp8;
- (id)methodSignatureForSelector:(SEL)fp8;
- (id)description;

@end

@interface DotMacKitAYEvent : NSObject
{
    NSString *_domain;
    int _code;
    id _info;
}

+ (id)eventWithDomain:(id)fp8 eventCode:(int)fp12 userInfo:(id)fp16;
- (id)initWithDomain:(id)fp8 eventCode:(int)fp12 userInfo:(id)fp16;
- (void)dealloc;
- (id)domain;
- (int)code;
- (id)userInfo;
- (id)description;

@end

@interface DotMacKitDAVHead : DotMacKitDAVRequest
{
}

+ (id)headRequestWithURL:(id)fp8;
+ (id)headRequestWithSession:(id)fp8 path:(id)fp12;
+ (id)headRequestWithSession:(id)fp8 URI:(id)fp12;
- (id)initHeadWithURL:(id)fp8;
- (id)initHeadWithSession:(id)fp8 path:(id)fp12;
- (id)initHeadWithSession:(id)fp8 URI:(id)fp12;
- (void)finalizeOperation;

@end

@interface DotMacKitDAVPost : DotMacKitDAVRequest
{
}

+ (id)postRequestWithURL:(id)fp8 data:(id)fp12;
+ (id)postRequestWithSession:(id)fp8 path:(id)fp12 data:(id)fp16;
- (id)initPostWithURL:(id)fp8 data:(id)fp12;
- (id)initPostWithSession:(id)fp8 path:(id)fp12 data:(id)fp16;
- (id)data;
- (void)finalizeOperation;

@end

@interface DotMacKitDAVGetToFile : DotMacKitDAVRequest
{
}

+ (id)getRequestWithURL:(id)fp8 toFileHandle:(id)fp12;
+ (id)getRequestWithSession:(id)fp8 path:(id)fp12 toFileHandle:(id)fp16;
+ (id)getRequestWithSession:(id)fp8 URI:(id)fp12 toFileHandle:(id)fp16;
- (id)initGetWithURL:(id)fp8 toFileHandle:(id)fp12;
- (id)initGetWithSession:(id)fp8 path:(id)fp12 toFileHandle:(id)fp16;
- (id)initGetWithSession:(id)fp8 URI:(id)fp12 toFileHandle:(id)fp16;
- (void)finalizeOperation;

@end

@interface DotMacKitDAVGet : DotMacKitDAVRequest
{
}

+ (id)getRequestWithURL:(id)fp8;
+ (id)getRequestWithSession:(id)fp8 path:(id)fp12;
+ (id)getRequestWithSession:(id)fp8 URI:(id)fp12;
- (id)initGetWithURL:(id)fp8;
- (id)initGetWithSession:(id)fp8 path:(id)fp12;
- (id)initGetWithSession:(id)fp8 URI:(id)fp12;
- (id)data;
- (void)finalizeOperation;

@end

@interface DotMacKitDAVPut : DotMacKitDAVRequest
{
}

+ (id)putRequestWithURL:(id)fp8 data:(id)fp12;
+ (id)putRequestWithSession:(id)fp8 path:(id)fp12 data:(id)fp16;
- (id)initPutWithURL:(id)fp8 data:(id)fp12;
- (id)initPutWithSession:(id)fp8 path:(id)fp12 data:(id)fp16;
- (void)finalizeOperation;

@end

@interface DotMacKit_DAVGetToFileReader : NSObject <DAVResponseBodyReader>
{
    NSFileHandle *_fileHandle;
}

- (id)initWithFileHandle:(id)fp8;
- (void)dealloc;
- (BOOL)request:(id)fp8 acceptResponseWithHTTPStatusCode:(int)fp12;
- (void)request:(id)fp8 readResponseBody:(id)fp12;

@end

@interface DotMacKit_DAVGetReader : NSObject <DAVResponseBodyReader>
{
    NSMutableData *_data;
}

- (id)init;
- (void)dealloc;
- (BOOL)request:(id)fp8 acceptResponseWithHTTPStatusCode:(int)fp12;
- (void)request:(id)fp8 readResponseBody:(id)fp12;
- (id)data;

@end

@interface DMPrincipalManagementImpl : NSObject <DMPrincipalManagement>
{
    DMiDiskSession *_iDiskSession;
}

- (id)initWithIDiskSession:(id)fp8;
- (id)createSecondaryUserNamed:(id)fp8 withPassword:(id)fp12;
- (id)removeSecondaryUserNamed:(id)fp8;
- (id)resetPassword:(id)fp8 forSecondaryUserNamed:(id)fp12;
- (id)listSecondaryUsersForAccountNamed:(id)fp8;
- (id)createGroup:(id)fp8 withMembers:(id)fp12;
- (id)removePrincipals:(id)fp8 fromGroup:(id)fp12;
- (id)addPrincipals:(id)fp8 toGroup:(id)fp12;
- (id)removeGroup:(id)fp8;
- (id)listMembers:(id)fp8;
- (id)groupExists:(id)fp8;
- (id)listGroupsForAccountNamed:(id)fp8;

@end

@interface DMPrincipalManagementImpl (Private)
- (void)_setIDiskSession:(id)fp8;
- (id)_createXMLDataForSecondaryCreate:(id)fp8 andPassword:(id)fp12;
- (id)_createXMLDataForSecondaryRemove:(id)fp8;
- (id)_createXMLDataForSecondaryReset:(id)fp8 withPassword:(id)fp12;
- (id)_createXMLDataForSecondaryList:(id)fp8;
- (id)_createXMLDataForGroupCreate:(id)fp8 withMembers:(id)fp12;
- (id)_createXMLDataForGroupRemove:(id)fp8;
- (id)_createXMLDataForRemovePrincipals:(id)fp8 fromGroup:(id)fp12;
- (id)_createXMLDataForAddPrincipals:(id)fp8 toGroup:(id)fp12;
- (id)_createXMLDataForGroupExists:(id)fp8;
- (id)_createXMLDataForListMembers:(id)fp8;
- (id)_createXMLDataForGroupsForAccount:(id)fp8;
@end

@interface DotMacKitDAVXMLNSBag : NSObject
{
    NSMutableDictionary *tagMapping;
    NSMutableDictionary *allNS;
    unsigned int nsCounter;
    void *reserved1;
}

+ (void)initialize;
+ (id)_smartTagForTag:(id)fp8;
+ (id)namespaceForTag:(id)fp8;
+ (void)registerNSTags:(id)fp8 withNamespace:(id)fp12;
- (id)init;
- (void)dealloc;
- (id)tagForNSTag:(id)fp8;
- (id)allXMLNSAttributes;

@end

@interface DotMacKit_DAVXMLNSTag : NSObject
{
    NSString *ns;
    NSString *tag;
}

- (id)initWithNS:(id)fp8 andTag:(id)fp12;
- (void)dealloc;
- (id)namespace;
- (id)tag;

@end

