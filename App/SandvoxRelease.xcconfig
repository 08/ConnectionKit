
// grab SANDVOX_VERSION and SVN_VERSION
#include "../Xcode/Configurations/Sandvox.xcconfig"

// release builds are 32-bit Universal, using Leopards's SDK
ARCHS = ppc i386

//ARCHS = $(ARCHS_STANDARD_32_64_BIT)
//SDKROOT = macosx10.6
//MACOSX_DEPLOYMENT_TARGET = 10.5


GCC_PRECOMPILE_PREFIX_HEADER = YES
GCC_PREFIX_HEADER = Marvel_Prefix.pch

// keep debugging symbols in separate files so we can symbolize crash logs
// <http://developer.apple.com/tools/xcode/symbolizingcrashdumps.html>
DEBUG_INFORMATION_FORMAT = dwarf-with-dsym
GCC_GENERATE_DEBUGGING_SYMBOLS = YES
ZERO_LINK = NO

FRAMEWORK_SEARCH_PATHS = "$(SRCROOT)/../../Shared/ThirdParty/BWToolkit" "$(SRCROOT)/../../Shared/ThirdParty/Sparkle" "$(SRCROOT)/../../Shared/ThirdParty/JSTalk" "$(SRCROOT)/../../Shared/ThirdParty/Growl" "$(SYSTEM_LIBRARY_DIR)/PrivateFrameworks"

// we strip the installed product
STRIP_INSTALLED_PRODUCT = YES
// but we want to strip the application *after* linking, not during
SEPARATE_STRIP = YES
// so we also pass -S, rather than -s, so that the application is stripped like a framework
// an alternative/equivalent is STRIP_STYLE = debugging
STRIPFLAGS = "-S"
// but do we strip frameworks when we copy them? (No for now...)
COPY_PHASE_STRIP = NO 
// we must keep symbols visible, NOT 'private extern' 
GCC_SYMBOLS_PRIVATE_EXTERN=NO

// turn on "install" build actions
DEPLOYMENT_POSTPROCESSING=YES

// but don't deal with DSTROOT and INSTALL_PATH, like ever
DEPLOYMENT_LOCATION=NO

// other GCC settings
GCC_DYNAMIC_NO_PIC = YES
GCC_ENABLE_FIX_AND_CONTINUE = NO
GCC_ENABLE_OBJC_EXCEPTIONS = YES
GCC_FAST_OBJC_DISPATCH = YES
GCC_MODEL_TUNING = G5
// SUPPRESS_IMEDIA_PPC
GCC_PREPROCESSOR_DEFINITIONS =  USES_IMEDIA VARIANT_$(PRODUCT_VARIANT) $(OMNI_DEBUG_CURRENT_SETTING) EXPIRY_TIMESTAMP=$(EXPIRY_TIMESTAMP)
GCC_WARN_ABOUT_RETURN_TYPE = YES
GCC_WARN_UNINITIALIZED_AUTOS = YES
GCC_WARN_UNUSED_VALUE = YES
GCC_WARN_UNUSED_VARIABLE = YES

LIBRARY_SEARCH_PATHS = $(BUILD_DIR)
OTHER_LDFLAGS = -lsasl2 -seg1addr 0x70000000
PREBINDING = NO


// Should be OMNI_FORCE_ASSERTIONS for release, and the assertions.m makes failures throw (alpha/beta) or log (release)
OMNI_DEBUG_CURRENT_SETTING = OMNI_FORCE_ASSERTIONS
